package a4.atlas.ntup.smwz;
import "a4/root/RootExtension.proto";

message TileTrackMuFeature {
    optional float pt = 1 [(root_branch)="pt"];
    optional float eta = 2 [(root_branch)="eta"];
    optional float phi = 3 [(root_branch)="phi"];
    
    optional float PtTR_Trk = 100 [(root_branch)="PtTR_Trk"];
    optional float EtaTR_Trk = 101 [(root_branch)="EtaTR_Trk"];
    optional float PhiTR_Trk = 102 [(root_branch)="PhiTR_Trk"];
    optional int32 Typ_IDTrk = 103 [(root_branch)="Typ_IDTrk"];
    
    optional int32 L2_2mu10 = 200 [(root_branch)="L2_2mu10"];
    optional int32 L2_2mu10_empty = 201 [(root_branch)="L2_2mu10_empty"];
    optional int32 L2_2mu10_loose = 202 [(root_branch)="L2_2mu10_loose"];
    optional int32 L2_2mu10_loose_empty = 203 [(root_branch)="L2_2mu10_loose_empty"];
    optional int32 L2_2mu10_loose_noOvlpRm = 204 [(root_branch)="L2_2mu10_loose_noOvlpRm"];
    optional int32 L2_2mu13_Zmumu_IDTrkNoCut = 205 [(root_branch)="L2_2mu13_Zmumu_IDTrkNoCut"];
    optional int32 L2_2mu4 = 206 [(root_branch)="L2_2mu4"];
    optional int32 L2_2mu4_Bmumu = 207 [(root_branch)="L2_2mu4_Bmumu"];
    optional int32 L2_2mu4_Bmumux = 208 [(root_branch)="L2_2mu4_Bmumux"];
    optional int32 L2_2mu4_DiMu = 209 [(root_branch)="L2_2mu4_DiMu"];
    optional int32 L2_2mu4_DiMu_DY = 210 [(root_branch)="L2_2mu4_DiMu_DY"];
    optional int32 L2_2mu4_DiMu_DY20 = 211 [(root_branch)="L2_2mu4_DiMu_DY20"];
    optional int32 L2_2mu4_DiMu_DY_noVtx_noOS = 212 [(root_branch)="L2_2mu4_DiMu_DY_noVtx_noOS"];
    optional int32 L2_2mu4_DiMu_SiTrk = 213 [(root_branch)="L2_2mu4_DiMu_SiTrk"];
    optional int32 L2_2mu4_DiMu_noVtx_noOS = 214 [(root_branch)="L2_2mu4_DiMu_noVtx_noOS"];
    optional int32 L2_2mu4_Jpsimumu = 215 [(root_branch)="L2_2mu4_Jpsimumu"];
    optional int32 L2_2mu4_Jpsimumu_IDTrkNoCut = 216 [(root_branch)="L2_2mu4_Jpsimumu_IDTrkNoCut"];
    optional int32 L2_2mu4_Upsimumu = 217 [(root_branch)="L2_2mu4_Upsimumu"];
    optional int32 L2_2mu4i_DiMu_DY = 218 [(root_branch)="L2_2mu4i_DiMu_DY"];
    optional int32 L2_2mu6 = 219 [(root_branch)="L2_2mu6"];
    optional int32 L2_2mu6_MSonly_g10_loose = 220 [(root_branch)="L2_2mu6_MSonly_g10_loose"];
    optional int32 L2_2mu6_MSonly_g10_loose_nonfilled = 221 [(root_branch)="L2_2mu6_MSonly_g10_loose_nonfilled"];
    optional int32 L2_2mu6_NL = 222 [(root_branch)="L2_2mu6_NL"];
    optional int32 L2_mu0_cal_empty = 223 [(root_branch)="L2_mu0_cal_empty"];
    optional int32 L2_mu0_empty_NoAlg = 224 [(root_branch)="L2_mu0_empty_NoAlg"];
    optional int32 L2_mu0_firstempty_NoAlg = 225 [(root_branch)="L2_mu0_firstempty_NoAlg"];
    optional int32 L2_mu0_unpaired_iso_NoAlg = 226 [(root_branch)="L2_mu0_unpaired_iso_NoAlg"];
    optional int32 L2_mu10 = 227 [(root_branch)="L2_mu10"];
    optional int32 L2_mu10_Jpsimumu = 228 [(root_branch)="L2_mu10_Jpsimumu"];
    optional int32 L2_mu10_NL = 229 [(root_branch)="L2_mu10_NL"];
    optional int32 L2_mu10_Upsimumu_FS = 230 [(root_branch)="L2_mu10_Upsimumu_FS"];
    optional int32 L2_mu10_Upsimumu_tight_FS = 231 [(root_branch)="L2_mu10_Upsimumu_tight_FS"];
    optional int32 L2_mu10_cal = 232 [(root_branch)="L2_mu10_cal"];
    optional int32 L2_mu10_loose = 233 [(root_branch)="L2_mu10_loose"];
    optional int32 L2_mu10_muCombTag_NoEF = 234 [(root_branch)="L2_mu10_muCombTag_NoEF"];
    optional int32 L2_mu11_empty_NoAlg = 235 [(root_branch)="L2_mu11_empty_NoAlg"];
    optional int32 L2_mu13 = 236 [(root_branch)="L2_mu13"];
    optional int32 L2_mu13_MG = 237 [(root_branch)="L2_mu13_MG"];
    optional int32 L2_mu13_muCombTag_NoEF = 238 [(root_branch)="L2_mu13_muCombTag_NoEF"];
    optional int32 L2_mu15 = 239 [(root_branch)="L2_mu15"];
    optional int32 L2_mu15_medium = 240 [(root_branch)="L2_mu15_medium"];
    optional int32 L2_mu15i = 241 [(root_branch)="L2_mu15i"];
    optional int32 L2_mu15i_medium = 242 [(root_branch)="L2_mu15i_medium"];
    optional int32 L2_mu18 = 243 [(root_branch)="L2_mu18"];
    optional int32 L2_mu18_MG = 244 [(root_branch)="L2_mu18_MG"];
    optional int32 L2_mu18_MG_medium = 245 [(root_branch)="L2_mu18_MG_medium"];
    optional int32 L2_mu18_medium = 246 [(root_branch)="L2_mu18_medium"];
    optional int32 L2_mu20 = 247 [(root_branch)="L2_mu20"];
    optional int32 L2_mu20_IDTrkNoCut = 248 [(root_branch)="L2_mu20_IDTrkNoCut"];
    optional int32 L2_mu20_MG = 249 [(root_branch)="L2_mu20_MG"];
    optional int32 L2_mu20_MG_medium = 250 [(root_branch)="L2_mu20_MG_medium"];
    optional int32 L2_mu20_empty = 251 [(root_branch)="L2_mu20_empty"];
    optional int32 L2_mu20_medium = 252 [(root_branch)="L2_mu20_medium"];
    optional int32 L2_mu20_muCombTag_NoEF = 253 [(root_branch)="L2_mu20_muCombTag_NoEF"];
    optional int32 L2_mu20i = 254 [(root_branch)="L2_mu20i"];
    optional int32 L2_mu20i_medium = 255 [(root_branch)="L2_mu20i_medium"];
    optional int32 L2_mu22 = 256 [(root_branch)="L2_mu22"];
    optional int32 L2_mu22_MG = 257 [(root_branch)="L2_mu22_MG"];
    optional int32 L2_mu22_MG_medium = 258 [(root_branch)="L2_mu22_MG_medium"];
    optional int32 L2_mu22_medium = 259 [(root_branch)="L2_mu22_medium"];
    optional int32 L2_mu4 = 260 [(root_branch)="L2_mu4"];
    optional int32 L2_mu40_MSonly_barrel = 261 [(root_branch)="L2_mu40_MSonly_barrel"];
    optional int32 L2_mu40_MSonly_barrel_medium = 262 [(root_branch)="L2_mu40_MSonly_barrel_medium"];
    optional int32 L2_mu40_MSonly_empty = 263 [(root_branch)="L2_mu40_MSonly_empty"];
    optional int32 L2_mu40_MSonly_tight = 264 [(root_branch)="L2_mu40_MSonly_tight"];
    optional int32 L2_mu40_MSonly_tighter = 265 [(root_branch)="L2_mu40_MSonly_tighter"];
    optional int32 L2_mu40_slow = 266 [(root_branch)="L2_mu40_slow"];
    optional int32 L2_mu40_slow_empty = 267 [(root_branch)="L2_mu40_slow_empty"];
    optional int32 L2_mu40_slow_medium = 268 [(root_branch)="L2_mu40_slow_medium"];
    optional int32 L2_mu40_slow_outOfTime = 269 [(root_branch)="L2_mu40_slow_outOfTime"];
    optional int32 L2_mu4_DiMu = 270 [(root_branch)="L2_mu4_DiMu"];
    optional int32 L2_mu4_DiMu_FS_noOS = 271 [(root_branch)="L2_mu4_DiMu_FS_noOS"];
    optional int32 L2_mu4_Jpsimumu = 272 [(root_branch)="L2_mu4_Jpsimumu"];
    optional int32 L2_mu4_L1J10_matched = 273 [(root_branch)="L2_mu4_L1J10_matched"];
    optional int32 L2_mu4_L1J15_matched = 274 [(root_branch)="L2_mu4_L1J15_matched"];
    optional int32 L2_mu4_L1J20_matched = 275 [(root_branch)="L2_mu4_L1J20_matched"];
    optional int32 L2_mu4_L1J30_matched = 276 [(root_branch)="L2_mu4_L1J30_matched"];
    optional int32 L2_mu4_L1J50_matched = 277 [(root_branch)="L2_mu4_L1J50_matched"];
    optional int32 L2_mu4_L1J75_matched = 278 [(root_branch)="L2_mu4_L1J75_matched"];
    optional int32 L2_mu4_L1MU11_MSonly_cosmic = 279 [(root_branch)="L2_mu4_L1MU11_MSonly_cosmic"];
    optional int32 L2_mu4_L1MU11_cosmic = 280 [(root_branch)="L2_mu4_L1MU11_cosmic"];
    optional int32 L2_mu4_MSonly_cosmic = 281 [(root_branch)="L2_mu4_MSonly_cosmic"];
    optional int32 L2_mu4_Trk_Jpsi = 282 [(root_branch)="L2_mu4_Trk_Jpsi"];
    optional int32 L2_mu4_Trk_Upsi_FS = 283 [(root_branch)="L2_mu4_Trk_Upsi_FS"];
    optional int32 L2_mu4_Upsimumu_FS = 284 [(root_branch)="L2_mu4_Upsimumu_FS"];
    optional int32 L2_mu4_Upsimumu_SiTrk_FS = 285 [(root_branch)="L2_mu4_Upsimumu_SiTrk_FS"];
    optional int32 L2_mu4_Upsimumu_tight_FS = 286 [(root_branch)="L2_mu4_Upsimumu_tight_FS"];
    optional int32 L2_mu4_cosmic = 287 [(root_branch)="L2_mu4_cosmic"];
    optional int32 L2_mu4_j10_a4tc_EFFS = 288 [(root_branch)="L2_mu4_j10_a4tc_EFFS"];
    optional int32 L2_mu4_j40_xe20_loose_noMu = 289 [(root_branch)="L2_mu4_j40_xe20_loose_noMu"];
    optional int32 L2_mu4_j95_L1matched = 290 [(root_branch)="L2_mu4_j95_L1matched"];
    optional int32 L2_mu4mu6_Bmumu = 291 [(root_branch)="L2_mu4mu6_Bmumu"];
    optional int32 L2_mu4mu6_BmumuX = 292 [(root_branch)="L2_mu4mu6_BmumuX"];
    optional int32 L2_mu4mu6_DiMu = 293 [(root_branch)="L2_mu4mu6_DiMu"];
    optional int32 L2_mu4mu6_DiMu_noVtx_noOS = 294 [(root_branch)="L2_mu4mu6_DiMu_noVtx_noOS"];
    optional int32 L2_mu4mu6_Jpsimumu = 295 [(root_branch)="L2_mu4mu6_Jpsimumu"];
    optional int32 L2_mu4mu6_Upsimumu = 296 [(root_branch)="L2_mu4mu6_Upsimumu"];
    optional int32 L2_mu6 = 297 [(root_branch)="L2_mu6"];
    optional int32 L2_mu6_DiMu_noOS = 298 [(root_branch)="L2_mu6_DiMu_noOS"];
    optional int32 L2_mu6_Jpsimumu = 299 [(root_branch)="L2_mu6_Jpsimumu"];
    optional int32 L2_mu6_Jpsimumu_SiTrk = 300 [(root_branch)="L2_mu6_Jpsimumu_SiTrk"];
    optional int32 L2_mu6_Jpsimumu_tight = 301 [(root_branch)="L2_mu6_Jpsimumu_tight"];
    optional int32 L2_mu6_Trk_Jpsi_loose = 302 [(root_branch)="L2_mu6_Trk_Jpsi_loose"];
    
    optional int32 tilemu_index = 400 [(root_branch)="tilemu_index"];
    
    optional int32 idtrk_algorithmId = 500 [(root_branch)="idtrk_algorithmId"];
    optional int32 idtrk_trackStatus = 501 [(root_branch)="idtrk_trackStatus"];
    optional float idtrk_chi2Ndof = 502 [(root_branch)="idtrk_chi2Ndof"];
    optional int32 idtrk_nStrawHits = 503 [(root_branch)="idtrk_nStrawHits"];
    optional int32 idtrk_nHighThrHits = 504 [(root_branch)="idtrk_nHighThrHits"];
    optional int32 idtrk_nPixelSpacePoints = 505 [(root_branch)="idtrk_nPixelSpacePoints"];
    optional int32 idtrk_nSCT_SpacePoints = 506 [(root_branch)="idtrk_nSCT_SpacePoints"];
    optional float idtrk_idtrkfitpar_a0 = 507 [(root_branch)="idtrk_idtrkfitpar_a0"];
    optional float idtrk_idtrkfitpar_z0 = 508 [(root_branch)="idtrk_idtrkfitpar_z0"];
    optional float idtrk_idtrkfitpar_phi0 = 509 [(root_branch)="idtrk_idtrkfitpar_phi0"];
    optional float idtrk_idtrkfitpar_eta = 510 [(root_branch)="idtrk_idtrkfitpar_eta"];
    optional float idtrk_idtrkfitpar_pt = 511 [(root_branch)="idtrk_idtrkfitpar_pt"];
    optional int32 idtrk_idtrkfitpar_hasidtrkfitpar = 512 [(root_branch)="idtrk_idtrkfitpar_hasidtrkfitpar"];
    optional int32 idtrk_hasidtrk = 513 [(root_branch)="idtrk_hasidtrk"];

    extensions 100000 to max;
}