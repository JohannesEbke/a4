package a4.atlas.ntup.smwz;
import "a4/root/RootExtension.proto";

message IsoMuonFeature {
    optional float pt = 1 [(root_branch)="pt"];
    optional float eta = 2 [(root_branch)="eta"];
    optional float phi = 3 [(root_branch)="phi"];
    
    optional float EtInnerConeEC = 100 [(root_branch)="EtInnerConeEC"];
    optional float EtOuterConeEC = 101 [(root_branch)="EtOuterConeEC"];
    optional float EtInnerConeHC = 102 [(root_branch)="EtInnerConeHC"];
    optional float EtOuterConeHC = 103 [(root_branch)="EtOuterConeHC"];
    optional int32 NTracksCone = 104 [(root_branch)="NTracksCone"];
    optional float SumPtTracksCone = 105 [(root_branch)="SumPtTracksCone"];
    optional float PtMuTracksCone = 106 [(root_branch)="PtMuTracksCone"];
    
    optional int32 iso_strategy = 200 [(root_branch)="iso_strategy"];
    
    optional int32 RoiIdMu  = 300 [(root_branch)="RoiIdMu "];
    
    optional float LArWeight = 400 [(root_branch)="LArWeight"];
    optional float TileWeight = 401 [(root_branch)="TileWeight"];
    
    optional int32 L2_2mu10 = 500 [(root_branch)="L2_2mu10"];
    optional int32 L2_2mu10_empty = 501 [(root_branch)="L2_2mu10_empty"];
    optional int32 L2_2mu10_loose = 502 [(root_branch)="L2_2mu10_loose"];
    optional int32 L2_2mu10_loose_empty = 503 [(root_branch)="L2_2mu10_loose_empty"];
    optional int32 L2_2mu10_loose_noOvlpRm = 504 [(root_branch)="L2_2mu10_loose_noOvlpRm"];
    optional int32 L2_2mu13_Zmumu_IDTrkNoCut = 505 [(root_branch)="L2_2mu13_Zmumu_IDTrkNoCut"];
    optional int32 L2_2mu4 = 506 [(root_branch)="L2_2mu4"];
    optional int32 L2_2mu4_Bmumu = 507 [(root_branch)="L2_2mu4_Bmumu"];
    optional int32 L2_2mu4_Bmumux = 508 [(root_branch)="L2_2mu4_Bmumux"];
    optional int32 L2_2mu4_DiMu = 509 [(root_branch)="L2_2mu4_DiMu"];
    optional int32 L2_2mu4_DiMu_DY = 510 [(root_branch)="L2_2mu4_DiMu_DY"];
    optional int32 L2_2mu4_DiMu_DY20 = 511 [(root_branch)="L2_2mu4_DiMu_DY20"];
    optional int32 L2_2mu4_DiMu_DY_noVtx_noOS = 512 [(root_branch)="L2_2mu4_DiMu_DY_noVtx_noOS"];
    optional int32 L2_2mu4_DiMu_SiTrk = 513 [(root_branch)="L2_2mu4_DiMu_SiTrk"];
    optional int32 L2_2mu4_DiMu_noVtx_noOS = 514 [(root_branch)="L2_2mu4_DiMu_noVtx_noOS"];
    optional int32 L2_2mu4_Jpsimumu = 515 [(root_branch)="L2_2mu4_Jpsimumu"];
    optional int32 L2_2mu4_Jpsimumu_IDTrkNoCut = 516 [(root_branch)="L2_2mu4_Jpsimumu_IDTrkNoCut"];
    optional int32 L2_2mu4_Upsimumu = 517 [(root_branch)="L2_2mu4_Upsimumu"];
    optional int32 L2_2mu4i_DiMu_DY = 518 [(root_branch)="L2_2mu4i_DiMu_DY"];
    optional int32 L2_2mu6 = 519 [(root_branch)="L2_2mu6"];
    optional int32 L2_2mu6_MSonly_g10_loose = 520 [(root_branch)="L2_2mu6_MSonly_g10_loose"];
    optional int32 L2_2mu6_MSonly_g10_loose_nonfilled = 521 [(root_branch)="L2_2mu6_MSonly_g10_loose_nonfilled"];
    optional int32 L2_2mu6_NL = 522 [(root_branch)="L2_2mu6_NL"];
    optional int32 L2_mu0_cal_empty = 523 [(root_branch)="L2_mu0_cal_empty"];
    optional int32 L2_mu0_empty_NoAlg = 524 [(root_branch)="L2_mu0_empty_NoAlg"];
    optional int32 L2_mu0_firstempty_NoAlg = 525 [(root_branch)="L2_mu0_firstempty_NoAlg"];
    optional int32 L2_mu0_unpaired_iso_NoAlg = 526 [(root_branch)="L2_mu0_unpaired_iso_NoAlg"];
    optional int32 L2_mu10 = 527 [(root_branch)="L2_mu10"];
    optional int32 L2_mu10_Jpsimumu = 528 [(root_branch)="L2_mu10_Jpsimumu"];
    optional int32 L2_mu10_NL = 529 [(root_branch)="L2_mu10_NL"];
    optional int32 L2_mu10_Upsimumu_FS = 530 [(root_branch)="L2_mu10_Upsimumu_FS"];
    optional int32 L2_mu10_Upsimumu_tight_FS = 531 [(root_branch)="L2_mu10_Upsimumu_tight_FS"];
    optional int32 L2_mu10_cal = 532 [(root_branch)="L2_mu10_cal"];
    optional int32 L2_mu10_loose = 533 [(root_branch)="L2_mu10_loose"];
    optional int32 L2_mu10_muCombTag_NoEF = 534 [(root_branch)="L2_mu10_muCombTag_NoEF"];
    optional int32 L2_mu11_empty_NoAlg = 535 [(root_branch)="L2_mu11_empty_NoAlg"];
    optional int32 L2_mu13 = 536 [(root_branch)="L2_mu13"];
    optional int32 L2_mu13_MG = 537 [(root_branch)="L2_mu13_MG"];
    optional int32 L2_mu13_muCombTag_NoEF = 538 [(root_branch)="L2_mu13_muCombTag_NoEF"];
    optional int32 L2_mu15 = 539 [(root_branch)="L2_mu15"];
    optional int32 L2_mu15_medium = 540 [(root_branch)="L2_mu15_medium"];
    optional int32 L2_mu15i = 541 [(root_branch)="L2_mu15i"];
    optional int32 L2_mu15i_medium = 542 [(root_branch)="L2_mu15i_medium"];
    optional int32 L2_mu18 = 543 [(root_branch)="L2_mu18"];
    optional int32 L2_mu18_MG = 544 [(root_branch)="L2_mu18_MG"];
    optional int32 L2_mu18_MG_medium = 545 [(root_branch)="L2_mu18_MG_medium"];
    optional int32 L2_mu18_medium = 546 [(root_branch)="L2_mu18_medium"];
    optional int32 L2_mu20 = 547 [(root_branch)="L2_mu20"];
    optional int32 L2_mu20_IDTrkNoCut = 548 [(root_branch)="L2_mu20_IDTrkNoCut"];
    optional int32 L2_mu20_MG = 549 [(root_branch)="L2_mu20_MG"];
    optional int32 L2_mu20_MG_medium = 550 [(root_branch)="L2_mu20_MG_medium"];
    optional int32 L2_mu20_empty = 551 [(root_branch)="L2_mu20_empty"];
    optional int32 L2_mu20_medium = 552 [(root_branch)="L2_mu20_medium"];
    optional int32 L2_mu20_muCombTag_NoEF = 553 [(root_branch)="L2_mu20_muCombTag_NoEF"];
    optional int32 L2_mu20i = 554 [(root_branch)="L2_mu20i"];
    optional int32 L2_mu20i_medium = 555 [(root_branch)="L2_mu20i_medium"];
    optional int32 L2_mu22 = 556 [(root_branch)="L2_mu22"];
    optional int32 L2_mu22_MG = 557 [(root_branch)="L2_mu22_MG"];
    optional int32 L2_mu22_MG_medium = 558 [(root_branch)="L2_mu22_MG_medium"];
    optional int32 L2_mu22_medium = 559 [(root_branch)="L2_mu22_medium"];
    optional int32 L2_mu4 = 560 [(root_branch)="L2_mu4"];
    optional int32 L2_mu40_MSonly_barrel = 561 [(root_branch)="L2_mu40_MSonly_barrel"];
    optional int32 L2_mu40_MSonly_barrel_medium = 562 [(root_branch)="L2_mu40_MSonly_barrel_medium"];
    optional int32 L2_mu40_MSonly_empty = 563 [(root_branch)="L2_mu40_MSonly_empty"];
    optional int32 L2_mu40_MSonly_tight = 564 [(root_branch)="L2_mu40_MSonly_tight"];
    optional int32 L2_mu40_MSonly_tighter = 565 [(root_branch)="L2_mu40_MSonly_tighter"];
    optional int32 L2_mu40_slow = 566 [(root_branch)="L2_mu40_slow"];
    optional int32 L2_mu40_slow_empty = 567 [(root_branch)="L2_mu40_slow_empty"];
    optional int32 L2_mu40_slow_medium = 568 [(root_branch)="L2_mu40_slow_medium"];
    optional int32 L2_mu40_slow_outOfTime = 569 [(root_branch)="L2_mu40_slow_outOfTime"];
    optional int32 L2_mu4_DiMu = 570 [(root_branch)="L2_mu4_DiMu"];
    optional int32 L2_mu4_DiMu_FS_noOS = 571 [(root_branch)="L2_mu4_DiMu_FS_noOS"];
    optional int32 L2_mu4_Jpsimumu = 572 [(root_branch)="L2_mu4_Jpsimumu"];
    optional int32 L2_mu4_L1J10_matched = 573 [(root_branch)="L2_mu4_L1J10_matched"];
    optional int32 L2_mu4_L1J15_matched = 574 [(root_branch)="L2_mu4_L1J15_matched"];
    optional int32 L2_mu4_L1J20_matched = 575 [(root_branch)="L2_mu4_L1J20_matched"];
    optional int32 L2_mu4_L1J30_matched = 576 [(root_branch)="L2_mu4_L1J30_matched"];
    optional int32 L2_mu4_L1J50_matched = 577 [(root_branch)="L2_mu4_L1J50_matched"];
    optional int32 L2_mu4_L1J75_matched = 578 [(root_branch)="L2_mu4_L1J75_matched"];
    optional int32 L2_mu4_L1MU11_MSonly_cosmic = 579 [(root_branch)="L2_mu4_L1MU11_MSonly_cosmic"];
    optional int32 L2_mu4_L1MU11_cosmic = 580 [(root_branch)="L2_mu4_L1MU11_cosmic"];
    optional int32 L2_mu4_MSonly_cosmic = 581 [(root_branch)="L2_mu4_MSonly_cosmic"];
    optional int32 L2_mu4_Trk_Jpsi = 582 [(root_branch)="L2_mu4_Trk_Jpsi"];
    optional int32 L2_mu4_Trk_Upsi_FS = 583 [(root_branch)="L2_mu4_Trk_Upsi_FS"];
    optional int32 L2_mu4_Upsimumu_FS = 584 [(root_branch)="L2_mu4_Upsimumu_FS"];
    optional int32 L2_mu4_Upsimumu_SiTrk_FS = 585 [(root_branch)="L2_mu4_Upsimumu_SiTrk_FS"];
    optional int32 L2_mu4_Upsimumu_tight_FS = 586 [(root_branch)="L2_mu4_Upsimumu_tight_FS"];
    optional int32 L2_mu4_cosmic = 587 [(root_branch)="L2_mu4_cosmic"];
    optional int32 L2_mu4_j10_a4tc_EFFS = 588 [(root_branch)="L2_mu4_j10_a4tc_EFFS"];
    optional int32 L2_mu4_j40_xe20_loose_noMu = 589 [(root_branch)="L2_mu4_j40_xe20_loose_noMu"];
    optional int32 L2_mu4_j95_L1matched = 590 [(root_branch)="L2_mu4_j95_L1matched"];
    optional int32 L2_mu4mu6_Bmumu = 591 [(root_branch)="L2_mu4mu6_Bmumu"];
    optional int32 L2_mu4mu6_BmumuX = 592 [(root_branch)="L2_mu4mu6_BmumuX"];
    optional int32 L2_mu4mu6_DiMu = 593 [(root_branch)="L2_mu4mu6_DiMu"];
    optional int32 L2_mu4mu6_DiMu_noVtx_noOS = 594 [(root_branch)="L2_mu4mu6_DiMu_noVtx_noOS"];
    optional int32 L2_mu4mu6_Jpsimumu = 595 [(root_branch)="L2_mu4mu6_Jpsimumu"];
    optional int32 L2_mu4mu6_Upsimumu = 596 [(root_branch)="L2_mu4mu6_Upsimumu"];
    optional int32 L2_mu6 = 597 [(root_branch)="L2_mu6"];
    optional int32 L2_mu6_DiMu_noOS = 598 [(root_branch)="L2_mu6_DiMu_noOS"];
    optional int32 L2_mu6_Jpsimumu = 599 [(root_branch)="L2_mu6_Jpsimumu"];
    optional int32 L2_mu6_Jpsimumu_SiTrk = 600 [(root_branch)="L2_mu6_Jpsimumu_SiTrk"];
    optional int32 L2_mu6_Jpsimumu_tight = 601 [(root_branch)="L2_mu6_Jpsimumu_tight"];
    optional int32 L2_mu6_Trk_Jpsi_loose = 602 [(root_branch)="L2_mu6_Trk_Jpsi_loose"];
}