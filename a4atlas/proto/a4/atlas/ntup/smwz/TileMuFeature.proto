package a4.atlas.ntup.smwz;
import "a4/root/RootExtension.proto";

message TileMuFeature {
    optional float eta = 1 [(root_branch)="eta"];
    optional float phi = 2 [(root_branch)="phi"];
    
    repeated float enedep = 100 [(root_branch)="enedep"];
    
    optional float quality = 200 [(root_branch)="quality"];
    
    optional int32 L2_2mu10 = 300 [(root_branch)="L2_2mu10"];
    optional int32 L2_2mu10_empty = 301 [(root_branch)="L2_2mu10_empty"];
    optional int32 L2_2mu10_loose = 302 [(root_branch)="L2_2mu10_loose"];
    optional int32 L2_2mu10_loose_empty = 303 [(root_branch)="L2_2mu10_loose_empty"];
    optional int32 L2_2mu10_loose_noOvlpRm = 304 [(root_branch)="L2_2mu10_loose_noOvlpRm"];
    optional int32 L2_2mu13_Zmumu_IDTrkNoCut = 305 [(root_branch)="L2_2mu13_Zmumu_IDTrkNoCut"];
    optional int32 L2_2mu4 = 306 [(root_branch)="L2_2mu4"];
    optional int32 L2_2mu4_Bmumu = 307 [(root_branch)="L2_2mu4_Bmumu"];
    optional int32 L2_2mu4_Bmumux = 308 [(root_branch)="L2_2mu4_Bmumux"];
    optional int32 L2_2mu4_DiMu = 309 [(root_branch)="L2_2mu4_DiMu"];
    optional int32 L2_2mu4_DiMu_DY = 310 [(root_branch)="L2_2mu4_DiMu_DY"];
    optional int32 L2_2mu4_DiMu_DY20 = 311 [(root_branch)="L2_2mu4_DiMu_DY20"];
    optional int32 L2_2mu4_DiMu_DY_noVtx_noOS = 312 [(root_branch)="L2_2mu4_DiMu_DY_noVtx_noOS"];
    optional int32 L2_2mu4_DiMu_SiTrk = 313 [(root_branch)="L2_2mu4_DiMu_SiTrk"];
    optional int32 L2_2mu4_DiMu_noVtx_noOS = 314 [(root_branch)="L2_2mu4_DiMu_noVtx_noOS"];
    optional int32 L2_2mu4_Jpsimumu = 315 [(root_branch)="L2_2mu4_Jpsimumu"];
    optional int32 L2_2mu4_Jpsimumu_IDTrkNoCut = 316 [(root_branch)="L2_2mu4_Jpsimumu_IDTrkNoCut"];
    optional int32 L2_2mu4_Upsimumu = 317 [(root_branch)="L2_2mu4_Upsimumu"];
    optional int32 L2_2mu4i_DiMu_DY = 318 [(root_branch)="L2_2mu4i_DiMu_DY"];
    optional int32 L2_2mu6 = 319 [(root_branch)="L2_2mu6"];
    optional int32 L2_2mu6_MSonly_g10_loose = 320 [(root_branch)="L2_2mu6_MSonly_g10_loose"];
    optional int32 L2_2mu6_MSonly_g10_loose_nonfilled = 321 [(root_branch)="L2_2mu6_MSonly_g10_loose_nonfilled"];
    optional int32 L2_2mu6_NL = 322 [(root_branch)="L2_2mu6_NL"];
    optional int32 L2_mu0_cal_empty = 323 [(root_branch)="L2_mu0_cal_empty"];
    optional int32 L2_mu0_empty_NoAlg = 324 [(root_branch)="L2_mu0_empty_NoAlg"];
    optional int32 L2_mu0_firstempty_NoAlg = 325 [(root_branch)="L2_mu0_firstempty_NoAlg"];
    optional int32 L2_mu0_unpaired_iso_NoAlg = 326 [(root_branch)="L2_mu0_unpaired_iso_NoAlg"];
    optional int32 L2_mu10 = 327 [(root_branch)="L2_mu10"];
    optional int32 L2_mu10_Jpsimumu = 328 [(root_branch)="L2_mu10_Jpsimumu"];
    optional int32 L2_mu10_NL = 329 [(root_branch)="L2_mu10_NL"];
    optional int32 L2_mu10_Upsimumu_FS = 330 [(root_branch)="L2_mu10_Upsimumu_FS"];
    optional int32 L2_mu10_Upsimumu_tight_FS = 331 [(root_branch)="L2_mu10_Upsimumu_tight_FS"];
    optional int32 L2_mu10_cal = 332 [(root_branch)="L2_mu10_cal"];
    optional int32 L2_mu10_loose = 333 [(root_branch)="L2_mu10_loose"];
    optional int32 L2_mu10_muCombTag_NoEF = 334 [(root_branch)="L2_mu10_muCombTag_NoEF"];
    optional int32 L2_mu11_empty_NoAlg = 335 [(root_branch)="L2_mu11_empty_NoAlg"];
    optional int32 L2_mu13 = 336 [(root_branch)="L2_mu13"];
    optional int32 L2_mu13_MG = 337 [(root_branch)="L2_mu13_MG"];
    optional int32 L2_mu13_muCombTag_NoEF = 338 [(root_branch)="L2_mu13_muCombTag_NoEF"];
    optional int32 L2_mu15 = 339 [(root_branch)="L2_mu15"];
    optional int32 L2_mu15_medium = 340 [(root_branch)="L2_mu15_medium"];
    optional int32 L2_mu15i = 341 [(root_branch)="L2_mu15i"];
    optional int32 L2_mu15i_medium = 342 [(root_branch)="L2_mu15i_medium"];
    optional int32 L2_mu18 = 343 [(root_branch)="L2_mu18"];
    optional int32 L2_mu18_MG = 344 [(root_branch)="L2_mu18_MG"];
    optional int32 L2_mu18_MG_medium = 345 [(root_branch)="L2_mu18_MG_medium"];
    optional int32 L2_mu18_medium = 346 [(root_branch)="L2_mu18_medium"];
    optional int32 L2_mu20 = 347 [(root_branch)="L2_mu20"];
    optional int32 L2_mu20_IDTrkNoCut = 348 [(root_branch)="L2_mu20_IDTrkNoCut"];
    optional int32 L2_mu20_MG = 349 [(root_branch)="L2_mu20_MG"];
    optional int32 L2_mu20_MG_medium = 350 [(root_branch)="L2_mu20_MG_medium"];
    optional int32 L2_mu20_empty = 351 [(root_branch)="L2_mu20_empty"];
    optional int32 L2_mu20_medium = 352 [(root_branch)="L2_mu20_medium"];
    optional int32 L2_mu20_muCombTag_NoEF = 353 [(root_branch)="L2_mu20_muCombTag_NoEF"];
    optional int32 L2_mu20i = 354 [(root_branch)="L2_mu20i"];
    optional int32 L2_mu20i_medium = 355 [(root_branch)="L2_mu20i_medium"];
    optional int32 L2_mu22 = 356 [(root_branch)="L2_mu22"];
    optional int32 L2_mu22_MG = 357 [(root_branch)="L2_mu22_MG"];
    optional int32 L2_mu22_MG_medium = 358 [(root_branch)="L2_mu22_MG_medium"];
    optional int32 L2_mu22_medium = 359 [(root_branch)="L2_mu22_medium"];
    optional int32 L2_mu4 = 360 [(root_branch)="L2_mu4"];
    optional int32 L2_mu40_MSonly_barrel = 361 [(root_branch)="L2_mu40_MSonly_barrel"];
    optional int32 L2_mu40_MSonly_barrel_medium = 362 [(root_branch)="L2_mu40_MSonly_barrel_medium"];
    optional int32 L2_mu40_MSonly_empty = 363 [(root_branch)="L2_mu40_MSonly_empty"];
    optional int32 L2_mu40_MSonly_tight = 364 [(root_branch)="L2_mu40_MSonly_tight"];
    optional int32 L2_mu40_MSonly_tighter = 365 [(root_branch)="L2_mu40_MSonly_tighter"];
    optional int32 L2_mu40_slow = 366 [(root_branch)="L2_mu40_slow"];
    optional int32 L2_mu40_slow_empty = 367 [(root_branch)="L2_mu40_slow_empty"];
    optional int32 L2_mu40_slow_medium = 368 [(root_branch)="L2_mu40_slow_medium"];
    optional int32 L2_mu40_slow_outOfTime = 369 [(root_branch)="L2_mu40_slow_outOfTime"];
    optional int32 L2_mu4_DiMu = 370 [(root_branch)="L2_mu4_DiMu"];
    optional int32 L2_mu4_DiMu_FS_noOS = 371 [(root_branch)="L2_mu4_DiMu_FS_noOS"];
    optional int32 L2_mu4_Jpsimumu = 372 [(root_branch)="L2_mu4_Jpsimumu"];
    optional int32 L2_mu4_L1J10_matched = 373 [(root_branch)="L2_mu4_L1J10_matched"];
    optional int32 L2_mu4_L1J15_matched = 374 [(root_branch)="L2_mu4_L1J15_matched"];
    optional int32 L2_mu4_L1J20_matched = 375 [(root_branch)="L2_mu4_L1J20_matched"];
    optional int32 L2_mu4_L1J30_matched = 376 [(root_branch)="L2_mu4_L1J30_matched"];
    optional int32 L2_mu4_L1J50_matched = 377 [(root_branch)="L2_mu4_L1J50_matched"];
    optional int32 L2_mu4_L1J75_matched = 378 [(root_branch)="L2_mu4_L1J75_matched"];
    optional int32 L2_mu4_L1MU11_MSonly_cosmic = 379 [(root_branch)="L2_mu4_L1MU11_MSonly_cosmic"];
    optional int32 L2_mu4_L1MU11_cosmic = 380 [(root_branch)="L2_mu4_L1MU11_cosmic"];
    optional int32 L2_mu4_MSonly_cosmic = 381 [(root_branch)="L2_mu4_MSonly_cosmic"];
    optional int32 L2_mu4_Trk_Jpsi = 382 [(root_branch)="L2_mu4_Trk_Jpsi"];
    optional int32 L2_mu4_Trk_Upsi_FS = 383 [(root_branch)="L2_mu4_Trk_Upsi_FS"];
    optional int32 L2_mu4_Upsimumu_FS = 384 [(root_branch)="L2_mu4_Upsimumu_FS"];
    optional int32 L2_mu4_Upsimumu_SiTrk_FS = 385 [(root_branch)="L2_mu4_Upsimumu_SiTrk_FS"];
    optional int32 L2_mu4_Upsimumu_tight_FS = 386 [(root_branch)="L2_mu4_Upsimumu_tight_FS"];
    optional int32 L2_mu4_cosmic = 387 [(root_branch)="L2_mu4_cosmic"];
    optional int32 L2_mu4_j10_a4tc_EFFS = 388 [(root_branch)="L2_mu4_j10_a4tc_EFFS"];
    optional int32 L2_mu4_j40_xe20_loose_noMu = 389 [(root_branch)="L2_mu4_j40_xe20_loose_noMu"];
    optional int32 L2_mu4_j95_L1matched = 390 [(root_branch)="L2_mu4_j95_L1matched"];
    optional int32 L2_mu4mu6_Bmumu = 391 [(root_branch)="L2_mu4mu6_Bmumu"];
    optional int32 L2_mu4mu6_BmumuX = 392 [(root_branch)="L2_mu4mu6_BmumuX"];
    optional int32 L2_mu4mu6_DiMu = 393 [(root_branch)="L2_mu4mu6_DiMu"];
    optional int32 L2_mu4mu6_DiMu_noVtx_noOS = 394 [(root_branch)="L2_mu4mu6_DiMu_noVtx_noOS"];
    optional int32 L2_mu4mu6_Jpsimumu = 395 [(root_branch)="L2_mu4mu6_Jpsimumu"];
    optional int32 L2_mu4mu6_Upsimumu = 396 [(root_branch)="L2_mu4mu6_Upsimumu"];
    optional int32 L2_mu6 = 397 [(root_branch)="L2_mu6"];
    optional int32 L2_mu6_DiMu_noOS = 398 [(root_branch)="L2_mu6_DiMu_noOS"];
    optional int32 L2_mu6_Jpsimumu = 399 [(root_branch)="L2_mu6_Jpsimumu"];
    optional int32 L2_mu6_Jpsimumu_SiTrk = 400 [(root_branch)="L2_mu6_Jpsimumu_SiTrk"];
    optional int32 L2_mu6_Jpsimumu_tight = 401 [(root_branch)="L2_mu6_Jpsimumu_tight"];
    optional int32 L2_mu6_Trk_Jpsi_loose = 402 [(root_branch)="L2_mu6_Trk_Jpsi_loose"];

    extensions 100000 to max;
}