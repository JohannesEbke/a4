package a4.atlas.ntup.smwz;
import "a4/root/RootExtension.proto";

message TrigPhoton {
    optional float E = 1 [(root_branch)="E"];
    optional float Et = 2 [(root_branch)="Et"];
    optional float pt = 3 [(root_branch)="pt"];
    optional float eta = 4 [(root_branch)="eta"];
    optional float phi = 5 [(root_branch)="phi"];
    
    optional int32 RoIWord = 100 [(root_branch)="RoIWord"];
    
    optional float HadEt1 = 200 [(root_branch)="HadEt1"];
    optional float Eratio = 201 [(root_branch)="Eratio"];
    optional float Reta = 202 [(root_branch)="Reta"];
    optional float dPhi = 203 [(root_branch)="dPhi"];
    optional float dEta = 204 [(root_branch)="dEta"];
    optional float F1 = 205 [(root_branch)="F1"];
    
    optional int32 L2_2g15_loose = 300 [(root_branch)="L2_2g15_loose"];
    optional int32 L2_2g20_loose = 301 [(root_branch)="L2_2g20_loose"];
    optional int32 L2_g100_etcut_g50_etcut = 302 [(root_branch)="L2_g100_etcut_g50_etcut"];
    optional int32 L2_g10_NoCut_cosmic = 303 [(root_branch)="L2_g10_NoCut_cosmic"];
    optional int32 L2_g11_etcut = 304 [(root_branch)="L2_g11_etcut"];
    optional int32 L2_g150_etcut = 305 [(root_branch)="L2_g150_etcut"];
    optional int32 L2_g15_loose = 306 [(root_branch)="L2_g15_loose"];
    optional int32 L2_g20_etcut = 307 [(root_branch)="L2_g20_etcut"];
    optional int32 L2_g20_etcut_xe30_noMu = 308 [(root_branch)="L2_g20_etcut_xe30_noMu"];
    optional int32 L2_g20_loose = 309 [(root_branch)="L2_g20_loose"];
    optional int32 L2_g40_loose = 310 [(root_branch)="L2_g40_loose"];
    optional int32 L2_g40_loose_EFxe40_noMu = 311 [(root_branch)="L2_g40_loose_EFxe40_noMu"];
    optional int32 L2_g40_tight = 312 [(root_branch)="L2_g40_tight"];
    optional int32 L2_g40_tight_b10_medium = 313 [(root_branch)="L2_g40_tight_b10_medium"];
    optional int32 L2_g5_NoCut_cosmic = 314 [(root_branch)="L2_g5_NoCut_cosmic"];
    optional int32 L2_g60_loose = 315 [(root_branch)="L2_g60_loose"];
    optional int32 L2_g80_loose = 316 [(root_branch)="L2_g80_loose"];

    extensions 100000 to max;
}