import "RootExtension.proto";

message Jet {
    
    optional float E = 1 [(root_branch)="E"]; 
    optional float pt = 2 [(root_branch)="pt"]; 
    optional float m = 3 [(root_branch)="m"]; 
    optional float eta = 4 [(root_branch)="eta"]; 
    optional float phi = 5 [(root_branch)="phi"]; 
    
    optional float el_dr = 100 [(root_branch)="el_dr"]; 
    optional int32 el_matched = 101 [(root_branch)="el_matched"]; 
    
    optional float mu_dr = 200 [(root_branch)="mu_dr"]; 
    optional int32 mu_matched = 201 [(root_branch)="mu_matched"]; 
    
    optional float L1_dr = 300 [(root_branch)="L1_dr"]; 
    optional int32 L1_matched = 301 [(root_branch)="L1_matched"]; 
    optional float L2_dr = 302 [(root_branch)="L2_dr"]; 
    optional int32 L2_matched = 303 [(root_branch)="L2_matched"]; 
    
    optional float EF_dr = 400 [(root_branch)="EF_dr"]; 
    optional int32 EF_matched = 401 [(root_branch)="EF_matched"]; 
    
    optional float WIDTH = 500 [(root_branch)="WIDTH"]; 
    
    optional float n90 = 600 [(root_branch)="n90"]; 
    
    optional float Timing = 700 [(root_branch)="Timing"]; 
    
    optional float LArQuality = 800 [(root_branch)="LArQuality"]; 
    
    optional float nTrk = 900 [(root_branch)="nTrk"]; 
    optional float sumPtTrk = 901 [(root_branch)="sumPtTrk"]; 
    
    optional float OriginIndex = 1000 [(root_branch)="OriginIndex"]; 
    
    optional float EMJES = 1100 [(root_branch)="EMJES"]; 
    
    optional float HECQuality = 1200 [(root_branch)="HECQuality"]; 
    
    optional float NegativeE = 1300 [(root_branch)="NegativeE"]; 
    
    optional float emfrac = 1400 [(root_branch)="emfrac"]; 
    optional float emscale_E = 1401 [(root_branch)="emscale_E"]; 
    optional float emscale_pt = 1402 [(root_branch)="emscale_pt"]; 
    optional float emscale_m = 1403 [(root_branch)="emscale_m"]; 
    optional float emscale_eta = 1404 [(root_branch)="emscale_eta"]; 
    optional float emscale_phi = 1405 [(root_branch)="emscale_phi"]; 
    
    optional float hecf = 1500 [(root_branch)="hecf"]; 
    
    optional float tgap3f = 1600 [(root_branch)="tgap3f"]; 
    
    optional int32 isUgly = 1700 [(root_branch)="isUgly"]; 
    
    optional int32 isBadLoose = 1800 [(root_branch)="isBadLoose"]; 
    optional int32 isBadMedium = 1801 [(root_branch)="isBadMedium"]; 
    optional int32 isBadTight = 1802 [(root_branch)="isBadTight"]; 
    
    optional int32 SamplingMax = 1900 [(root_branch)="SamplingMax"]; 
    optional float fracSamplingMax = 1901 [(root_branch)="fracSamplingMax"]; 
    
    optional float EtaOrigin = 2000 [(root_branch)="EtaOrigin"]; 
    optional float PhiOrigin = 2001 [(root_branch)="PhiOrigin"]; 
    optional float MOrigin = 2002 [(root_branch)="MOrigin"]; 
    optional float EtaOriginEM = 2003 [(root_branch)="EtaOriginEM"]; 
    optional float PhiOriginEM = 2004 [(root_branch)="PhiOriginEM"]; 
    optional float MOriginEM = 2005 [(root_branch)="MOriginEM"]; 
    
    optional float jvtxf = 2100 [(root_branch)="jvtxf"]; 
    optional float jvtx_x = 2101 [(root_branch)="jvtx_x"]; 
    optional float jvtx_y = 2102 [(root_branch)="jvtx_y"]; 
    optional float jvtx_z = 2103 [(root_branch)="jvtx_z"]; 
    
    
}