package a4.root.atlas.ntup_smwz;
import "a4/root/RootExtension.proto";

message EFPhoton {
    optional float E = 1 [(root_branch)="E"];
    optional float Et = 2 [(root_branch)="Et"];
    optional float pt = 3 [(root_branch)="pt"];
    optional float m = 4 [(root_branch)="m"];
    optional float eta = 5 [(root_branch)="eta"];
    optional float phi = 6 [(root_branch)="phi"];
    optional float px = 7 [(root_branch)="px"];
    optional float py = 8 [(root_branch)="py"];
    optional float pz = 9 [(root_branch)="pz"];
    
    optional int32 EF_2g15_loose = 100 [(root_branch)="EF_2g15_loose"];
    optional int32 EF_2g20_loose = 101 [(root_branch)="EF_2g20_loose"];
    
    optional int32 EF_g100_etcut_g50_etcut = 200 [(root_branch)="EF_g100_etcut_g50_etcut"];
    optional int32 EF_g10_NoCut_cosmic = 201 [(root_branch)="EF_g10_NoCut_cosmic"];
    optional int32 EF_g11_etcut = 202 [(root_branch)="EF_g11_etcut"];
    optional int32 EF_g11_etcut_larcalib = 203 [(root_branch)="EF_g11_etcut_larcalib"];
    optional int32 EF_g150_etcut = 204 [(root_branch)="EF_g150_etcut"];
    optional int32 EF_g15_loose = 205 [(root_branch)="EF_g15_loose"];
    optional int32 EF_g15_loose_larcalib = 206 [(root_branch)="EF_g15_loose_larcalib"];
    optional int32 EF_g20_etcut = 207 [(root_branch)="EF_g20_etcut"];
    optional int32 EF_g20_etcut_xe30_noMu = 208 [(root_branch)="EF_g20_etcut_xe30_noMu"];
    optional int32 EF_g20_loose = 209 [(root_branch)="EF_g20_loose"];
    optional int32 EF_g20_loose_larcalib = 210 [(root_branch)="EF_g20_loose_larcalib"];
    optional int32 EF_g40_loose = 211 [(root_branch)="EF_g40_loose"];
    optional int32 EF_g40_loose_EFxe40_noMu = 212 [(root_branch)="EF_g40_loose_EFxe40_noMu"];
    optional int32 EF_g40_loose_larcalib = 213 [(root_branch)="EF_g40_loose_larcalib"];
    optional int32 EF_g40_tight = 214 [(root_branch)="EF_g40_tight"];
    optional int32 EF_g40_tight_b10_medium = 215 [(root_branch)="EF_g40_tight_b10_medium"];
    optional int32 EF_g5_NoCut_cosmic = 216 [(root_branch)="EF_g5_NoCut_cosmic"];
    optional int32 EF_g60_loose = 217 [(root_branch)="EF_g60_loose"];
    optional int32 EF_g60_loose_larcalib = 218 [(root_branch)="EF_g60_loose_larcalib"];
    optional int32 EF_g80_loose = 219 [(root_branch)="EF_g80_loose"];
    optional int32 EF_g80_loose_larcalib = 220 [(root_branch)="EF_g80_loose_larcalib"];
    
    optional int32 author = 300 [(root_branch)="author"];
    
    optional int32 isRecovered = 400 [(root_branch)="isRecovered"];
    
    optional uint32 isEM = 500 [(root_branch)="isEM"];
    optional uint32 isEMLoose = 501 [(root_branch)="isEMLoose"];
    optional uint32 isEMMedium = 502 [(root_branch)="isEMMedium"];
    optional uint32 isEMTight = 503 [(root_branch)="isEMTight"];
    
    optional int32 convFlag = 600 [(root_branch)="convFlag"];
    optional int32 isConv = 601 [(root_branch)="isConv"];
    optional int32 nConv = 602 [(root_branch)="nConv"];
    optional int32 nSingleTrackConv = 603 [(root_branch)="nSingleTrackConv"];
    optional int32 nDoubleTrackConv = 604 [(root_branch)="nDoubleTrackConv"];
    
    optional int32 loose = 700 [(root_branch)="loose"];
    optional int32 looseIso = 701 [(root_branch)="looseIso"];
    
    optional int32 tight = 800 [(root_branch)="tight"];
    optional int32 tightIso = 801 [(root_branch)="tightIso"];
    
    optional int32 looseAR = 900 [(root_branch)="looseAR"];
    optional int32 looseARIso = 901 [(root_branch)="looseARIso"];
    
    optional int32 tightAR = 1000 [(root_branch)="tightAR"];
    optional int32 tightARIso = 1001 [(root_branch)="tightARIso"];
    
    optional float Ethad = 1100 [(root_branch)="Ethad"];
    optional float Ethad1 = 1101 [(root_branch)="Ethad1"];
    optional float E033 = 1102 [(root_branch)="E033"];
    optional float f1 = 1103 [(root_branch)="f1"];
    optional float f1core = 1104 [(root_branch)="f1core"];
    optional float Emins1 = 1105 [(root_branch)="Emins1"];
    optional float fside = 1106 [(root_branch)="fside"];
    optional float Emax2 = 1107 [(root_branch)="Emax2"];
    optional float ws3 = 1108 [(root_branch)="ws3"];
    optional float wstot = 1109 [(root_branch)="wstot"];
    optional float E132 = 1110 [(root_branch)="E132"];
    optional float E1152 = 1111 [(root_branch)="E1152"];
    optional float emaxs1 = 1112 [(root_branch)="emaxs1"];
    optional float deltaEs = 1113 [(root_branch)="deltaEs"];
    optional float E233 = 1114 [(root_branch)="E233"];
    optional float E237 = 1115 [(root_branch)="E237"];
    optional float E277 = 1116 [(root_branch)="E277"];
    optional float weta2 = 1117 [(root_branch)="weta2"];
    optional float f3 = 1118 [(root_branch)="f3"];
    optional float f3core = 1119 [(root_branch)="f3core"];
    
    optional float rphiallcalo = 1200 [(root_branch)="rphiallcalo"];
    
    optional float Etcone45 = 1300 [(root_branch)="Etcone45"];
    optional float Etcone15 = 1301 [(root_branch)="Etcone15"];
    optional float Etcone20 = 1302 [(root_branch)="Etcone20"];
    optional float Etcone25 = 1303 [(root_branch)="Etcone25"];
    optional float Etcone30 = 1304 [(root_branch)="Etcone30"];
    optional float Etcone35 = 1305 [(root_branch)="Etcone35"];
    optional float Etcone40 = 1306 [(root_branch)="Etcone40"];
    optional float ptcone20 = 1307 [(root_branch)="ptcone20"];
    optional float ptcone30 = 1308 [(root_branch)="ptcone30"];
    optional float ptcone40 = 1309 [(root_branch)="ptcone40"];
    
    optional float convanglematch = 1400 [(root_branch)="convanglematch"];
    optional float convtrackmatch = 1401 [(root_branch)="convtrackmatch"];
    
    optional int32 hasconv = 1500 [(root_branch)="hasconv"];
    optional float convvtxx = 1501 [(root_branch)="convvtxx"];
    optional float convvtxy = 1502 [(root_branch)="convvtxy"];
    optional float convvtxz = 1503 [(root_branch)="convvtxz"];
    optional float Rconv = 1504 [(root_branch)="Rconv"];
    optional float zconv = 1505 [(root_branch)="zconv"];
    optional float convvtxchi2 = 1506 [(root_branch)="convvtxchi2"];
    optional float pt1conv = 1507 [(root_branch)="pt1conv"];
    
    optional int32 convtrk1nBLHits = 1600 [(root_branch)="convtrk1nBLHits"];
    optional int32 convtrk1nPixHits = 1601 [(root_branch)="convtrk1nPixHits"];
    optional int32 convtrk1nSCTHits = 1602 [(root_branch)="convtrk1nSCTHits"];
    optional int32 convtrk1nTRTHits = 1603 [(root_branch)="convtrk1nTRTHits"];
    
    optional float pt2conv = 1700 [(root_branch)="pt2conv"];
    
    optional int32 convtrk2nBLHits = 1800 [(root_branch)="convtrk2nBLHits"];
    optional int32 convtrk2nPixHits = 1801 [(root_branch)="convtrk2nPixHits"];
    optional int32 convtrk2nSCTHits = 1802 [(root_branch)="convtrk2nSCTHits"];
    optional int32 convtrk2nTRTHits = 1803 [(root_branch)="convtrk2nTRTHits"];
    
    optional float ptconv = 1900 [(root_branch)="ptconv"];
    optional float pzconv = 1901 [(root_branch)="pzconv"];
    
    optional float reta = 2000 [(root_branch)="reta"];
    optional float rphi = 2001 [(root_branch)="rphi"];
    
    optional float cl_E = 2100 [(root_branch)="cl_E"];
    optional float cl_pt = 2101 [(root_branch)="cl_pt"];
    optional float cl_eta = 2102 [(root_branch)="cl_eta"];
    optional float cl_phi = 2103 [(root_branch)="cl_phi"];
    optional float cl_etas2 = 2104 [(root_branch)="cl_etas2"];
    
}