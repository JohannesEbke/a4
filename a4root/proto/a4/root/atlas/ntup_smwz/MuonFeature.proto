package a4.root.atlas.ntup_smwz;
import "a4/root/RootExtension.proto";

message MuonFeature {
    optional float pt = 1 [(root_branch)="pt"];
    optional float eta = 2 [(root_branch)="eta"];
    optional float phi = 3 [(root_branch)="phi"];
    optional float dir_phi = 4 [(root_branch)="dir_phi"];
    
    optional float zeta = 100 [(root_branch)="zeta"];
    optional float dir_zeta = 101 [(root_branch)="dir_zeta"];
    
    optional float radius = 200 [(root_branch)="radius"];
    
    optional float beta = 300 [(root_branch)="beta"];
    
    optional float br_radius = 400 [(root_branch)="br_radius"];
    optional float br_sagitta = 401 [(root_branch)="br_sagitta"];
    
    optional float ec_alpha = 500 [(root_branch)="ec_alpha"];
    optional float ec_beta = 501 [(root_branch)="ec_beta"];
    
    optional int32 roiId = 600 [(root_branch)="roiId"];
    
    optional int32 saddress = 700 [(root_branch)="saddress"];
    
    optional int32 algoId = 800 [(root_branch)="algoId"];
    
    optional float sp1_r = 900 [(root_branch)="sp1_r"];
    optional float sp1_z = 901 [(root_branch)="sp1_z"];
    optional float sp1_slope = 902 [(root_branch)="sp1_slope"];
    optional float sp2_r = 903 [(root_branch)="sp2_r"];
    optional float sp2_z = 904 [(root_branch)="sp2_z"];
    optional float sp2_slope = 905 [(root_branch)="sp2_slope"];
    optional float sp3_r = 906 [(root_branch)="sp3_r"];
    optional float sp3_z = 907 [(root_branch)="sp3_z"];
    optional float sp3_slope = 908 [(root_branch)="sp3_slope"];
    
    optional int32 L2_2mu10 = 1000 [(root_branch)="L2_2mu10"];
    optional int32 L2_2mu10_empty = 1001 [(root_branch)="L2_2mu10_empty"];
    optional int32 L2_2mu10_loose = 1002 [(root_branch)="L2_2mu10_loose"];
    optional int32 L2_2mu10_loose_empty = 1003 [(root_branch)="L2_2mu10_loose_empty"];
    optional int32 L2_2mu10_loose_noOvlpRm = 1004 [(root_branch)="L2_2mu10_loose_noOvlpRm"];
    
    optional int32 L2_2mu13_Zmumu_IDTrkNoCut = 1100 [(root_branch)="L2_2mu13_Zmumu_IDTrkNoCut"];
    
    optional int32 L2_2mu4 = 1200 [(root_branch)="L2_2mu4"];
    optional int32 L2_2mu4_Bmumu = 1201 [(root_branch)="L2_2mu4_Bmumu"];
    optional int32 L2_2mu4_Bmumux = 1202 [(root_branch)="L2_2mu4_Bmumux"];
    optional int32 L2_2mu4_DiMu = 1203 [(root_branch)="L2_2mu4_DiMu"];
    optional int32 L2_2mu4_DiMu_DY = 1204 [(root_branch)="L2_2mu4_DiMu_DY"];
    optional int32 L2_2mu4_DiMu_DY20 = 1205 [(root_branch)="L2_2mu4_DiMu_DY20"];
    optional int32 L2_2mu4_DiMu_DY_noVtx_noOS = 1206 [(root_branch)="L2_2mu4_DiMu_DY_noVtx_noOS"];
    optional int32 L2_2mu4_DiMu_SiTrk = 1207 [(root_branch)="L2_2mu4_DiMu_SiTrk"];
    optional int32 L2_2mu4_DiMu_noVtx_noOS = 1208 [(root_branch)="L2_2mu4_DiMu_noVtx_noOS"];
    optional int32 L2_2mu4_Jpsimumu = 1209 [(root_branch)="L2_2mu4_Jpsimumu"];
    optional int32 L2_2mu4_Jpsimumu_IDTrkNoCut = 1210 [(root_branch)="L2_2mu4_Jpsimumu_IDTrkNoCut"];
    optional int32 L2_2mu4_Upsimumu = 1211 [(root_branch)="L2_2mu4_Upsimumu"];
    optional int32 L2_2mu4i_DiMu_DY = 1212 [(root_branch)="L2_2mu4i_DiMu_DY"];
    optional int32 L2_2mu6 = 1213 [(root_branch)="L2_2mu6"];
    optional int32 L2_2mu6_MSonly_g10_loose = 1214 [(root_branch)="L2_2mu6_MSonly_g10_loose"];
    optional int32 L2_2mu6_MSonly_g10_loose_nonfilled = 1215 [(root_branch)="L2_2mu6_MSonly_g10_loose_nonfilled"];
    
    optional int32 L2_2mu6_NL = 1300 [(root_branch)="L2_2mu6_NL"];
    optional int32 L2_mu0_cal_empty = 1301 [(root_branch)="L2_mu0_cal_empty"];
    optional int32 L2_mu0_empty_NoAlg = 1302 [(root_branch)="L2_mu0_empty_NoAlg"];
    optional int32 L2_mu0_firstempty_NoAlg = 1303 [(root_branch)="L2_mu0_firstempty_NoAlg"];
    optional int32 L2_mu0_unpaired_iso_NoAlg = 1304 [(root_branch)="L2_mu0_unpaired_iso_NoAlg"];
    
    optional int32 L2_mu10 = 1400 [(root_branch)="L2_mu10"];
    optional int32 L2_mu10_Jpsimumu = 1401 [(root_branch)="L2_mu10_Jpsimumu"];
    optional int32 L2_mu10_NL = 1402 [(root_branch)="L2_mu10_NL"];
    optional int32 L2_mu10_Upsimumu_FS = 1403 [(root_branch)="L2_mu10_Upsimumu_FS"];
    optional int32 L2_mu10_Upsimumu_tight_FS = 1404 [(root_branch)="L2_mu10_Upsimumu_tight_FS"];
    optional int32 L2_mu10_cal = 1405 [(root_branch)="L2_mu10_cal"];
    optional int32 L2_mu10_loose = 1406 [(root_branch)="L2_mu10_loose"];
    optional int32 L2_mu10_muCombTag_NoEF = 1407 [(root_branch)="L2_mu10_muCombTag_NoEF"];
    optional int32 L2_mu11_empty_NoAlg = 1408 [(root_branch)="L2_mu11_empty_NoAlg"];
    optional int32 L2_mu13 = 1409 [(root_branch)="L2_mu13"];
    optional int32 L2_mu13_MG = 1410 [(root_branch)="L2_mu13_MG"];
    optional int32 L2_mu13_muCombTag_NoEF = 1411 [(root_branch)="L2_mu13_muCombTag_NoEF"];
    optional int32 L2_mu15 = 1412 [(root_branch)="L2_mu15"];
    optional int32 L2_mu15_medium = 1413 [(root_branch)="L2_mu15_medium"];
    optional int32 L2_mu15i = 1414 [(root_branch)="L2_mu15i"];
    optional int32 L2_mu15i_medium = 1415 [(root_branch)="L2_mu15i_medium"];
    optional int32 L2_mu18 = 1416 [(root_branch)="L2_mu18"];
    optional int32 L2_mu18_MG = 1417 [(root_branch)="L2_mu18_MG"];
    optional int32 L2_mu18_MG_medium = 1418 [(root_branch)="L2_mu18_MG_medium"];
    optional int32 L2_mu18_medium = 1419 [(root_branch)="L2_mu18_medium"];
    optional int32 L2_mu20 = 1420 [(root_branch)="L2_mu20"];
    optional int32 L2_mu20_IDTrkNoCut = 1421 [(root_branch)="L2_mu20_IDTrkNoCut"];
    optional int32 L2_mu20_MG = 1422 [(root_branch)="L2_mu20_MG"];
    optional int32 L2_mu20_MG_medium = 1423 [(root_branch)="L2_mu20_MG_medium"];
    optional int32 L2_mu20_empty = 1424 [(root_branch)="L2_mu20_empty"];
    optional int32 L2_mu20_medium = 1425 [(root_branch)="L2_mu20_medium"];
    optional int32 L2_mu20_muCombTag_NoEF = 1426 [(root_branch)="L2_mu20_muCombTag_NoEF"];
    optional int32 L2_mu20i = 1427 [(root_branch)="L2_mu20i"];
    optional int32 L2_mu20i_medium = 1428 [(root_branch)="L2_mu20i_medium"];
    optional int32 L2_mu22 = 1429 [(root_branch)="L2_mu22"];
    optional int32 L2_mu22_MG = 1430 [(root_branch)="L2_mu22_MG"];
    optional int32 L2_mu22_MG_medium = 1431 [(root_branch)="L2_mu22_MG_medium"];
    optional int32 L2_mu22_medium = 1432 [(root_branch)="L2_mu22_medium"];
    optional int32 L2_mu4 = 1433 [(root_branch)="L2_mu4"];
    optional int32 L2_mu40_MSonly_barrel = 1434 [(root_branch)="L2_mu40_MSonly_barrel"];
    optional int32 L2_mu40_MSonly_barrel_medium = 1435 [(root_branch)="L2_mu40_MSonly_barrel_medium"];
    optional int32 L2_mu40_MSonly_empty = 1436 [(root_branch)="L2_mu40_MSonly_empty"];
    optional int32 L2_mu40_MSonly_tight = 1437 [(root_branch)="L2_mu40_MSonly_tight"];
    optional int32 L2_mu40_MSonly_tighter = 1438 [(root_branch)="L2_mu40_MSonly_tighter"];
    optional int32 L2_mu40_slow = 1439 [(root_branch)="L2_mu40_slow"];
    optional int32 L2_mu40_slow_empty = 1440 [(root_branch)="L2_mu40_slow_empty"];
    optional int32 L2_mu40_slow_medium = 1441 [(root_branch)="L2_mu40_slow_medium"];
    optional int32 L2_mu40_slow_outOfTime = 1442 [(root_branch)="L2_mu40_slow_outOfTime"];
    optional int32 L2_mu4_DiMu = 1443 [(root_branch)="L2_mu4_DiMu"];
    optional int32 L2_mu4_DiMu_FS_noOS = 1444 [(root_branch)="L2_mu4_DiMu_FS_noOS"];
    optional int32 L2_mu4_Jpsimumu = 1445 [(root_branch)="L2_mu4_Jpsimumu"];
    optional int32 L2_mu4_L1J10_matched = 1446 [(root_branch)="L2_mu4_L1J10_matched"];
    optional int32 L2_mu4_L1J15_matched = 1447 [(root_branch)="L2_mu4_L1J15_matched"];
    optional int32 L2_mu4_L1J20_matched = 1448 [(root_branch)="L2_mu4_L1J20_matched"];
    optional int32 L2_mu4_L1J30_matched = 1449 [(root_branch)="L2_mu4_L1J30_matched"];
    optional int32 L2_mu4_L1J50_matched = 1450 [(root_branch)="L2_mu4_L1J50_matched"];
    optional int32 L2_mu4_L1J75_matched = 1451 [(root_branch)="L2_mu4_L1J75_matched"];
    optional int32 L2_mu4_L1MU11_MSonly_cosmic = 1452 [(root_branch)="L2_mu4_L1MU11_MSonly_cosmic"];
    optional int32 L2_mu4_L1MU11_cosmic = 1453 [(root_branch)="L2_mu4_L1MU11_cosmic"];
    optional int32 L2_mu4_MSonly_cosmic = 1454 [(root_branch)="L2_mu4_MSonly_cosmic"];
    optional int32 L2_mu4_Trk_Jpsi = 1455 [(root_branch)="L2_mu4_Trk_Jpsi"];
    optional int32 L2_mu4_Trk_Upsi_FS = 1456 [(root_branch)="L2_mu4_Trk_Upsi_FS"];
    optional int32 L2_mu4_Upsimumu_FS = 1457 [(root_branch)="L2_mu4_Upsimumu_FS"];
    optional int32 L2_mu4_Upsimumu_SiTrk_FS = 1458 [(root_branch)="L2_mu4_Upsimumu_SiTrk_FS"];
    optional int32 L2_mu4_Upsimumu_tight_FS = 1459 [(root_branch)="L2_mu4_Upsimumu_tight_FS"];
    optional int32 L2_mu4_cosmic = 1460 [(root_branch)="L2_mu4_cosmic"];
    optional int32 L2_mu4_j10_a4tc_EFFS = 1461 [(root_branch)="L2_mu4_j10_a4tc_EFFS"];
    optional int32 L2_mu4_j40_xe20_loose_noMu = 1462 [(root_branch)="L2_mu4_j40_xe20_loose_noMu"];
    optional int32 L2_mu4_j95_L1matched = 1463 [(root_branch)="L2_mu4_j95_L1matched"];
    optional int32 L2_mu4mu6_Bmumu = 1464 [(root_branch)="L2_mu4mu6_Bmumu"];
    optional int32 L2_mu4mu6_BmumuX = 1465 [(root_branch)="L2_mu4mu6_BmumuX"];
    optional int32 L2_mu4mu6_DiMu = 1466 [(root_branch)="L2_mu4mu6_DiMu"];
    optional int32 L2_mu4mu6_DiMu_noVtx_noOS = 1467 [(root_branch)="L2_mu4mu6_DiMu_noVtx_noOS"];
    optional int32 L2_mu4mu6_Jpsimumu = 1468 [(root_branch)="L2_mu4mu6_Jpsimumu"];
    optional int32 L2_mu4mu6_Upsimumu = 1469 [(root_branch)="L2_mu4mu6_Upsimumu"];
    optional int32 L2_mu6 = 1470 [(root_branch)="L2_mu6"];
    optional int32 L2_mu6_DiMu_noOS = 1471 [(root_branch)="L2_mu6_DiMu_noOS"];
    optional int32 L2_mu6_Jpsimumu = 1472 [(root_branch)="L2_mu6_Jpsimumu"];
    optional int32 L2_mu6_Jpsimumu_SiTrk = 1473 [(root_branch)="L2_mu6_Jpsimumu_SiTrk"];
    optional int32 L2_mu6_Jpsimumu_tight = 1474 [(root_branch)="L2_mu6_Jpsimumu_tight"];
    optional int32 L2_mu6_Trk_Jpsi_loose = 1475 [(root_branch)="L2_mu6_Trk_Jpsi_loose"];
    
}