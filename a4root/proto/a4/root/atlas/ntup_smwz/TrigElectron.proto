package a4.root.atlas.ntup_smwz;
import "a4/root/RootExtension.proto";

message TrigElectron {
    optional float E = 1 [(root_branch)="E"];
    optional float Et = 2 [(root_branch)="Et", default=260145.984375];
    optional float pt = 3 [(root_branch)="pt", default=260145.984375];
    optional float eta = 4 [(root_branch)="eta"];
    optional float phi = 5 [(root_branch)="phi"];
    
    optional int32 RoIWord = 100 [(root_branch)="RoIWord", default=0];
    
    optional float zvertex = 200 [(root_branch)="zvertex"];
    
    optional int32 charge = 300 [(root_branch)="charge", default=0];
    
    optional int32 trackAlgo = 400 [(root_branch)="trackAlgo"];
    
    optional float TRTHighTHitsRatio = 500 [(root_branch)="TRTHighTHitsRatio"];
    
    optional float deltaeta1 = 600 [(root_branch)="deltaeta1"];
    optional float deltaphi2 = 601 [(root_branch)="deltaphi2"];
    
    optional float EtOverPt = 700 [(root_branch)="EtOverPt"];
    optional float reta = 701 [(root_branch)="reta"];
    optional float Eratio = 702 [(root_branch)="Eratio"];
    optional float Ethad1 = 703 [(root_branch)="Ethad1"];
    
    optional int32 nTRTHits = 800 [(root_branch)="nTRTHits"];
    optional int32 nTRTHighTHits = 801 [(root_branch)="nTRTHighTHits"];
    
    optional int32 trackIndx = 900 [(root_branch)="trackIndx"];
    optional float trkPt = 901 [(root_branch)="trkPt"];
    optional float trkEtaAtCalo = 902 [(root_branch)="trkEtaAtCalo"];
    optional float trkPhiAtCalo = 903 [(root_branch)="trkPhiAtCalo"];
    
    optional float caloEta = 1000 [(root_branch)="caloEta"];
    optional float caloPhi = 1001 [(root_branch)="caloPhi"];
    
    optional float F1 = 1100 [(root_branch)="F1"];
    
    optional int32 L2_2e10_medium = 1200 [(root_branch)="L2_2e10_medium"];
    optional int32 L2_2e10_medium_mu6 = 1201 [(root_branch)="L2_2e10_medium_mu6"];
    optional int32 L2_2e12_medium = 1202 [(root_branch)="L2_2e12_medium"];
    optional int32 L2_2e5_tight = 1203 [(root_branch)="L2_2e5_tight"];
    optional int32 L2_2e5_tight_Jpsi = 1204 [(root_branch)="L2_2e5_tight_Jpsi"];
    optional int32 L2_e10_medium = 1205 [(root_branch)="L2_e10_medium"];
    optional int32 L2_e10_medium_2mu6 = 1206 [(root_branch)="L2_e10_medium_2mu6"];
    optional int32 L2_e10_medium_mu10 = 1207 [(root_branch)="L2_e10_medium_mu10"];
    optional int32 L2_e10_medium_mu6 = 1208 [(root_branch)="L2_e10_medium_mu6"];
    optional int32 L2_e11_etcut = 1209 [(root_branch)="L2_e11_etcut"];
    optional int32 L2_e12_medium = 1210 [(root_branch)="L2_e12_medium"];
    optional int32 L2_e13_etcut_xs45_noMu = 1211 [(root_branch)="L2_e13_etcut_xs45_noMu"];
    
    optional int32 L2_e15_HLTtighter = 1300 [(root_branch)="L2_e15_HLTtighter"];
    optional int32 L2_e15_medium = 1301 [(root_branch)="L2_e15_medium"];
    optional int32 L2_e15_medium_e12_medium = 1302 [(root_branch)="L2_e15_medium_e12_medium"];
    optional int32 L2_e15_medium_xe30_noMu = 1303 [(root_branch)="L2_e15_medium_xe30_noMu"];
    optional int32 L2_e15_tight = 1304 [(root_branch)="L2_e15_tight"];
    optional int32 L2_e20_loose = 1305 [(root_branch)="L2_e20_loose"];
    optional int32 L2_e20_loose1 = 1306 [(root_branch)="L2_e20_loose1"];
    optional int32 L2_e20_looseTrk = 1307 [(root_branch)="L2_e20_looseTrk"];
    optional int32 L2_e20_medium = 1308 [(root_branch)="L2_e20_medium"];
    optional int32 L2_e20_medium1 = 1309 [(root_branch)="L2_e20_medium1"];
    optional int32 L2_e20_medium2 = 1310 [(root_branch)="L2_e20_medium2"];
    optional int32 L2_e20_medium_IDTrkNoCut = 1311 [(root_branch)="L2_e20_medium_IDTrkNoCut"];
    optional int32 L2_e20_medium_SiTrk = 1312 [(root_branch)="L2_e20_medium_SiTrk"];
    optional int32 L2_e20_medium_TRT = 1313 [(root_branch)="L2_e20_medium_TRT"];
    optional int32 L2_e22_medium = 1314 [(root_branch)="L2_e22_medium"];
    optional int32 L2_e22_medium1 = 1315 [(root_branch)="L2_e22_medium1"];
    optional int32 L2_e22_medium2 = 1316 [(root_branch)="L2_e22_medium2"];
    optional int32 L2_e33_medium = 1317 [(root_branch)="L2_e33_medium"];
    optional int32 L2_e35_medium = 1318 [(root_branch)="L2_e35_medium"];
    optional int32 L2_e40_medium = 1319 [(root_branch)="L2_e40_medium"];
    optional int32 L2_e5_medium_mu6 = 1320 [(root_branch)="L2_e5_medium_mu6"];
    optional int32 L2_e5_medium_mu6_topo_medium = 1321 [(root_branch)="L2_e5_medium_mu6_topo_medium"];
    optional int32 L2_e5_tight = 1322 [(root_branch)="L2_e5_tight"];
    optional int32 L2_e5_tight_e4_etcut_Jpsi = 1323 [(root_branch)="L2_e5_tight_e4_etcut_Jpsi"];
    optional int32 L2_e5_tight_e4_etcut_Jpsi_SiTrk = 1324 [(root_branch)="L2_e5_tight_e4_etcut_Jpsi_SiTrk"];
    optional int32 L2_e5_tight_e4_etcut_Jpsi_TRT = 1325 [(root_branch)="L2_e5_tight_e4_etcut_Jpsi_TRT"];
    optional int32 L2_e5_tight_e5_NoCut = 1326 [(root_branch)="L2_e5_tight_e5_NoCut"];
    optional int32 L2_e5_tight_e9_etcut_Jpsi = 1327 [(root_branch)="L2_e5_tight_e9_etcut_Jpsi"];
    
    optional int32 L2_e60_loose = 1400 [(root_branch)="L2_e60_loose"];
    
    optional int32 L2_e7_tight_e14_etcut_Jpsi = 1500 [(root_branch)="L2_e7_tight_e14_etcut_Jpsi"];
    optional int32 L2_e9_tight_e5_tight_Jpsi = 1501 [(root_branch)="L2_e9_tight_e5_tight_Jpsi"];
    optional int32 L2_eb_physics = 1502 [(root_branch)="L2_eb_physics"];
    optional int32 L2_eb_physics_empty = 1503 [(root_branch)="L2_eb_physics_empty"];
    optional int32 L2_eb_physics_firstempty = 1504 [(root_branch)="L2_eb_physics_firstempty"];
    optional int32 L2_eb_physics_noL1PS = 1505 [(root_branch)="L2_eb_physics_noL1PS"];
    optional int32 L2_eb_physics_unpaired_iso = 1506 [(root_branch)="L2_eb_physics_unpaired_iso"];
    optional int32 L2_eb_physics_unpaired_noniso = 1507 [(root_branch)="L2_eb_physics_unpaired_noniso"];
    optional int32 L2_eb_random = 1508 [(root_branch)="L2_eb_random"];
    optional int32 L2_eb_random_empty = 1509 [(root_branch)="L2_eb_random_empty"];
    optional int32 L2_eb_random_firstempty = 1510 [(root_branch)="L2_eb_random_firstempty"];
    optional int32 L2_eb_random_unpaired_iso = 1511 [(root_branch)="L2_eb_random_unpaired_iso"];
    
    optional int32 L2_em3_empty_larcalib = 1600 [(root_branch)="L2_em3_empty_larcalib"];
    optional int32 L2_em5_empty_larcalib = 1601 [(root_branch)="L2_em5_empty_larcalib"];
    
}