package ntup_smwz;
import "a4/root/RootExtension.proto";

message IsoMuonFeature {
    optional float pt = 1 [(root_branch)="pt"];
    optional float eta = 2 [(root_branch)="eta"];
    optional float phi = 3 [(root_branch)="phi"];
    
    optional float EtInnerConeEC = 100 [(root_branch)="EtInnerConeEC"];
    optional float EtOuterConeEC = 101 [(root_branch)="EtOuterConeEC"];
    optional float EtInnerConeHC = 102 [(root_branch)="EtInnerConeHC"];
    optional float EtOuterConeHC = 103 [(root_branch)="EtOuterConeHC"];
    optional int32 NTracksCone = 104 [(root_branch)="NTracksCone"];
    optional float SumPtTracksCone = 105 [(root_branch)="SumPtTracksCone"];
    optional float PtMuTracksCone = 106 [(root_branch)="PtMuTracksCone"];
    
    optional int32 iso_strategy = 200 [(root_branch)="iso_strategy"];
    
    optional int32 RoiIdMu  = 300 [(root_branch)="RoiIdMu "];
    
    optional float LArWeight = 400 [(root_branch)="LArWeight"];
    optional float TileWeight = 401 [(root_branch)="TileWeight"];
    
    optional int32 L2_2mu10 = 500 [(root_branch)="L2_2mu10"];
    optional int32 L2_2mu10_empty = 501 [(root_branch)="L2_2mu10_empty"];
    optional int32 L2_2mu10_loose = 502 [(root_branch)="L2_2mu10_loose"];
    optional int32 L2_2mu10_loose_empty = 503 [(root_branch)="L2_2mu10_loose_empty"];
    optional int32 L2_2mu10_loose_noOvlpRm = 504 [(root_branch)="L2_2mu10_loose_noOvlpRm"];
    
    optional int32 L2_2mu13_Zmumu_IDTrkNoCut = 600 [(root_branch)="L2_2mu13_Zmumu_IDTrkNoCut"];
    
    optional int32 L2_2mu4 = 700 [(root_branch)="L2_2mu4"];
    optional int32 L2_2mu4_Bmumu = 701 [(root_branch)="L2_2mu4_Bmumu"];
    optional int32 L2_2mu4_Bmumux = 702 [(root_branch)="L2_2mu4_Bmumux"];
    optional int32 L2_2mu4_DiMu = 703 [(root_branch)="L2_2mu4_DiMu"];
    optional int32 L2_2mu4_DiMu_DY = 704 [(root_branch)="L2_2mu4_DiMu_DY"];
    optional int32 L2_2mu4_DiMu_DY20 = 705 [(root_branch)="L2_2mu4_DiMu_DY20"];
    optional int32 L2_2mu4_DiMu_DY_noVtx_noOS = 706 [(root_branch)="L2_2mu4_DiMu_DY_noVtx_noOS"];
    optional int32 L2_2mu4_DiMu_SiTrk = 707 [(root_branch)="L2_2mu4_DiMu_SiTrk"];
    optional int32 L2_2mu4_DiMu_noVtx_noOS = 708 [(root_branch)="L2_2mu4_DiMu_noVtx_noOS"];
    optional int32 L2_2mu4_Jpsimumu = 709 [(root_branch)="L2_2mu4_Jpsimumu"];
    optional int32 L2_2mu4_Jpsimumu_IDTrkNoCut = 710 [(root_branch)="L2_2mu4_Jpsimumu_IDTrkNoCut"];
    optional int32 L2_2mu4_Upsimumu = 711 [(root_branch)="L2_2mu4_Upsimumu"];
    optional int32 L2_2mu4i_DiMu_DY = 712 [(root_branch)="L2_2mu4i_DiMu_DY"];
    optional int32 L2_2mu6 = 713 [(root_branch)="L2_2mu6"];
    optional int32 L2_2mu6_MSonly_g10_loose = 714 [(root_branch)="L2_2mu6_MSonly_g10_loose"];
    optional int32 L2_2mu6_MSonly_g10_loose_nonfilled = 715 [(root_branch)="L2_2mu6_MSonly_g10_loose_nonfilled"];
    
    optional int32 L2_2mu6_NL = 800 [(root_branch)="L2_2mu6_NL"];
    optional int32 L2_mu0_cal_empty = 801 [(root_branch)="L2_mu0_cal_empty"];
    optional int32 L2_mu0_empty_NoAlg = 802 [(root_branch)="L2_mu0_empty_NoAlg"];
    optional int32 L2_mu0_firstempty_NoAlg = 803 [(root_branch)="L2_mu0_firstempty_NoAlg"];
    optional int32 L2_mu0_unpaired_iso_NoAlg = 804 [(root_branch)="L2_mu0_unpaired_iso_NoAlg"];
    
    optional int32 L2_mu10 = 900 [(root_branch)="L2_mu10"];
    optional int32 L2_mu10_Jpsimumu = 901 [(root_branch)="L2_mu10_Jpsimumu"];
    optional int32 L2_mu10_NL = 902 [(root_branch)="L2_mu10_NL"];
    optional int32 L2_mu10_Upsimumu_FS = 903 [(root_branch)="L2_mu10_Upsimumu_FS"];
    optional int32 L2_mu10_Upsimumu_tight_FS = 904 [(root_branch)="L2_mu10_Upsimumu_tight_FS"];
    optional int32 L2_mu10_cal = 905 [(root_branch)="L2_mu10_cal"];
    optional int32 L2_mu10_loose = 906 [(root_branch)="L2_mu10_loose"];
    optional int32 L2_mu10_muCombTag_NoEF = 907 [(root_branch)="L2_mu10_muCombTag_NoEF"];
    optional int32 L2_mu11_empty_NoAlg = 908 [(root_branch)="L2_mu11_empty_NoAlg"];
    optional int32 L2_mu13 = 909 [(root_branch)="L2_mu13"];
    optional int32 L2_mu13_MG = 910 [(root_branch)="L2_mu13_MG"];
    optional int32 L2_mu13_muCombTag_NoEF = 911 [(root_branch)="L2_mu13_muCombTag_NoEF"];
    optional int32 L2_mu15 = 912 [(root_branch)="L2_mu15"];
    optional int32 L2_mu15_medium = 913 [(root_branch)="L2_mu15_medium"];
    optional int32 L2_mu15i = 914 [(root_branch)="L2_mu15i"];
    optional int32 L2_mu15i_medium = 915 [(root_branch)="L2_mu15i_medium"];
    optional int32 L2_mu18 = 916 [(root_branch)="L2_mu18"];
    optional int32 L2_mu18_MG = 917 [(root_branch)="L2_mu18_MG"];
    optional int32 L2_mu18_MG_medium = 918 [(root_branch)="L2_mu18_MG_medium"];
    optional int32 L2_mu18_medium = 919 [(root_branch)="L2_mu18_medium"];
    optional int32 L2_mu20 = 920 [(root_branch)="L2_mu20"];
    optional int32 L2_mu20_IDTrkNoCut = 921 [(root_branch)="L2_mu20_IDTrkNoCut"];
    optional int32 L2_mu20_MG = 922 [(root_branch)="L2_mu20_MG"];
    optional int32 L2_mu20_MG_medium = 923 [(root_branch)="L2_mu20_MG_medium"];
    optional int32 L2_mu20_empty = 924 [(root_branch)="L2_mu20_empty"];
    optional int32 L2_mu20_medium = 925 [(root_branch)="L2_mu20_medium"];
    optional int32 L2_mu20_muCombTag_NoEF = 926 [(root_branch)="L2_mu20_muCombTag_NoEF"];
    optional int32 L2_mu20i = 927 [(root_branch)="L2_mu20i"];
    optional int32 L2_mu20i_medium = 928 [(root_branch)="L2_mu20i_medium"];
    optional int32 L2_mu22 = 929 [(root_branch)="L2_mu22"];
    optional int32 L2_mu22_MG = 930 [(root_branch)="L2_mu22_MG"];
    optional int32 L2_mu22_MG_medium = 931 [(root_branch)="L2_mu22_MG_medium"];
    optional int32 L2_mu22_medium = 932 [(root_branch)="L2_mu22_medium"];
    optional int32 L2_mu4 = 933 [(root_branch)="L2_mu4"];
    optional int32 L2_mu40_MSonly_barrel = 934 [(root_branch)="L2_mu40_MSonly_barrel"];
    optional int32 L2_mu40_MSonly_barrel_medium = 935 [(root_branch)="L2_mu40_MSonly_barrel_medium"];
    optional int32 L2_mu40_MSonly_empty = 936 [(root_branch)="L2_mu40_MSonly_empty"];
    optional int32 L2_mu40_MSonly_tight = 937 [(root_branch)="L2_mu40_MSonly_tight"];
    optional int32 L2_mu40_MSonly_tighter = 938 [(root_branch)="L2_mu40_MSonly_tighter"];
    optional int32 L2_mu40_slow = 939 [(root_branch)="L2_mu40_slow"];
    optional int32 L2_mu40_slow_empty = 940 [(root_branch)="L2_mu40_slow_empty"];
    optional int32 L2_mu40_slow_medium = 941 [(root_branch)="L2_mu40_slow_medium"];
    optional int32 L2_mu40_slow_outOfTime = 942 [(root_branch)="L2_mu40_slow_outOfTime"];
    optional int32 L2_mu4_DiMu = 943 [(root_branch)="L2_mu4_DiMu"];
    optional int32 L2_mu4_DiMu_FS_noOS = 944 [(root_branch)="L2_mu4_DiMu_FS_noOS"];
    optional int32 L2_mu4_Jpsimumu = 945 [(root_branch)="L2_mu4_Jpsimumu"];
    optional int32 L2_mu4_L1J10_matched = 946 [(root_branch)="L2_mu4_L1J10_matched"];
    optional int32 L2_mu4_L1J15_matched = 947 [(root_branch)="L2_mu4_L1J15_matched"];
    optional int32 L2_mu4_L1J20_matched = 948 [(root_branch)="L2_mu4_L1J20_matched"];
    optional int32 L2_mu4_L1J30_matched = 949 [(root_branch)="L2_mu4_L1J30_matched"];
    optional int32 L2_mu4_L1J50_matched = 950 [(root_branch)="L2_mu4_L1J50_matched"];
    optional int32 L2_mu4_L1J75_matched = 951 [(root_branch)="L2_mu4_L1J75_matched"];
    optional int32 L2_mu4_L1MU11_MSonly_cosmic = 952 [(root_branch)="L2_mu4_L1MU11_MSonly_cosmic"];
    optional int32 L2_mu4_L1MU11_cosmic = 953 [(root_branch)="L2_mu4_L1MU11_cosmic"];
    optional int32 L2_mu4_MSonly_cosmic = 954 [(root_branch)="L2_mu4_MSonly_cosmic"];
    optional int32 L2_mu4_Trk_Jpsi = 955 [(root_branch)="L2_mu4_Trk_Jpsi"];
    optional int32 L2_mu4_Trk_Upsi_FS = 956 [(root_branch)="L2_mu4_Trk_Upsi_FS"];
    optional int32 L2_mu4_Upsimumu_FS = 957 [(root_branch)="L2_mu4_Upsimumu_FS"];
    optional int32 L2_mu4_Upsimumu_SiTrk_FS = 958 [(root_branch)="L2_mu4_Upsimumu_SiTrk_FS"];
    optional int32 L2_mu4_Upsimumu_tight_FS = 959 [(root_branch)="L2_mu4_Upsimumu_tight_FS"];
    optional int32 L2_mu4_cosmic = 960 [(root_branch)="L2_mu4_cosmic"];
    optional int32 L2_mu4_j10_a4tc_EFFS = 961 [(root_branch)="L2_mu4_j10_a4tc_EFFS"];
    optional int32 L2_mu4_j40_xe20_loose_noMu = 962 [(root_branch)="L2_mu4_j40_xe20_loose_noMu"];
    optional int32 L2_mu4_j95_L1matched = 963 [(root_branch)="L2_mu4_j95_L1matched"];
    optional int32 L2_mu4mu6_Bmumu = 964 [(root_branch)="L2_mu4mu6_Bmumu"];
    optional int32 L2_mu4mu6_BmumuX = 965 [(root_branch)="L2_mu4mu6_BmumuX"];
    optional int32 L2_mu4mu6_DiMu = 966 [(root_branch)="L2_mu4mu6_DiMu"];
    optional int32 L2_mu4mu6_DiMu_noVtx_noOS = 967 [(root_branch)="L2_mu4mu6_DiMu_noVtx_noOS"];
    optional int32 L2_mu4mu6_Jpsimumu = 968 [(root_branch)="L2_mu4mu6_Jpsimumu"];
    optional int32 L2_mu4mu6_Upsimumu = 969 [(root_branch)="L2_mu4mu6_Upsimumu"];
    optional int32 L2_mu6 = 970 [(root_branch)="L2_mu6"];
    optional int32 L2_mu6_DiMu_noOS = 971 [(root_branch)="L2_mu6_DiMu_noOS"];
    optional int32 L2_mu6_Jpsimumu = 972 [(root_branch)="L2_mu6_Jpsimumu"];
    optional int32 L2_mu6_Jpsimumu_SiTrk = 973 [(root_branch)="L2_mu6_Jpsimumu_SiTrk"];
    optional int32 L2_mu6_Jpsimumu_tight = 974 [(root_branch)="L2_mu6_Jpsimumu_tight"];
    optional int32 L2_mu6_Trk_Jpsi_loose = 975 [(root_branch)="L2_mu6_Trk_Jpsi_loose"];
    
}