package a4.root.atlas.ntup_photon;
import "a4/root/RootExtension.proto";

message TrigElectron {
    optional float E = 1 [(root_branch)="E"];
    optional float Et = 2 [(root_branch)="Et", default=260145.984375];
    optional float pt = 3 [(root_branch)="pt", default=260145.984375];
    optional float eta = 4 [(root_branch)="eta"];
    optional float phi = 5 [(root_branch)="phi"];
    
    optional int32 RoIWord = 100 [(root_branch)="RoIWord", default=0];
    
    optional float zvertex = 200 [(root_branch)="zvertex"];
    
    optional int32 charge = 300 [(root_branch)="charge", default=0];
    
    optional int32 trackAlgo = 400 [(root_branch)="trackAlgo"];
    
    optional float TRTHighTHitsRatio = 500 [(root_branch)="TRTHighTHitsRatio"];
    
    optional float deltaeta1 = 600 [(root_branch)="deltaeta1"];
    optional float deltaphi2 = 601 [(root_branch)="deltaphi2"];
    
    optional float EtOverPt = 700 [(root_branch)="EtOverPt"];
    optional float reta = 701 [(root_branch)="reta"];
    optional float Eratio = 702 [(root_branch)="Eratio"];
    optional float Ethad1 = 703 [(root_branch)="Ethad1"];
    
    optional int32 nTRTHits = 800 [(root_branch)="nTRTHits"];
    optional int32 nTRTHighTHits = 801 [(root_branch)="nTRTHighTHits"];
    
    optional int32 trackIndx = 900 [(root_branch)="trackIndx"];
    optional float trkPt = 901 [(root_branch)="trkPt"];
    optional float trkEtaAtCalo = 902 [(root_branch)="trkEtaAtCalo"];
    optional float trkPhiAtCalo = 903 [(root_branch)="trkPhiAtCalo"];
    
    optional float caloEta = 1000 [(root_branch)="caloEta"];
    optional float caloPhi = 1001 [(root_branch)="caloPhi"];
    
    optional float F1 = 1100 [(root_branch)="F1"];
    
    optional int32 L2_2e10_medium = 1200 [(root_branch)="L2_2e10_medium"];
    optional int32 L2_2e10_medium_mu6 = 1201 [(root_branch)="L2_2e10_medium_mu6"];
    optional int32 L2_2e11T_medium = 1202 [(root_branch)="L2_2e11T_medium"];
    optional int32 L2_2e12T_medium = 1203 [(root_branch)="L2_2e12T_medium"];
    optional int32 L2_2e12_medium = 1204 [(root_branch)="L2_2e12_medium"];
    optional int32 L2_2e15_loose = 1205 [(root_branch)="L2_2e15_loose"];
    optional int32 L2_2e15_medium = 1206 [(root_branch)="L2_2e15_medium"];
    optional int32 L2_2e5_medium = 1207 [(root_branch)="L2_2e5_medium"];
    optional int32 L2_2e5_medium_SiTrk = 1208 [(root_branch)="L2_2e5_medium_SiTrk"];
    optional int32 L2_2e5_medium_TRT = 1209 [(root_branch)="L2_2e5_medium_TRT"];
    optional int32 L2_2e5_tight = 1210 [(root_branch)="L2_2e5_tight"];
    optional int32 L2_2e5_tight_Jpsi = 1211 [(root_branch)="L2_2e5_tight_Jpsi"];
    optional int32 L2_e10_NoCut = 1212 [(root_branch)="L2_e10_NoCut"];
    optional int32 L2_e10_loose = 1213 [(root_branch)="L2_e10_loose"];
    optional int32 L2_e10_loose_mu10 = 1214 [(root_branch)="L2_e10_loose_mu10"];
    optional int32 L2_e10_loose_mu6 = 1215 [(root_branch)="L2_e10_loose_mu6"];
    optional int32 L2_e10_medium = 1216 [(root_branch)="L2_e10_medium"];
    optional int32 L2_e10_medium_2mu6 = 1217 [(root_branch)="L2_e10_medium_2mu6"];
    optional int32 L2_e10_medium_mu10 = 1218 [(root_branch)="L2_e10_medium_mu10"];
    optional int32 L2_e10_medium_mu6 = 1219 [(root_branch)="L2_e10_medium_mu6"];
    optional int32 L2_e10_medium_mu6_topo_medium = 1220 [(root_branch)="L2_e10_medium_mu6_topo_medium"];
    optional int32 L2_e11T_medium = 1221 [(root_branch)="L2_e11T_medium"];
    optional int32 L2_e11T_medium_2e6T_medium = 1222 [(root_branch)="L2_e11T_medium_2e6T_medium"];
    optional int32 L2_e11_etcut = 1223 [(root_branch)="L2_e11_etcut"];
    optional int32 L2_e12_medium = 1224 [(root_branch)="L2_e12_medium"];
    optional int32 L2_e13_etcut_xs45_noMu = 1225 [(root_branch)="L2_e13_etcut_xs45_noMu"];
    
    optional int32 L2_e15_HLTtighter = 1300 [(root_branch)="L2_e15_HLTtighter"];
    optional int32 L2_e15_loose = 1301 [(root_branch)="L2_e15_loose"];
    optional int32 L2_e15_medium = 1302 [(root_branch)="L2_e15_medium"];
    optional int32 L2_e15_medium_e12_medium = 1303 [(root_branch)="L2_e15_medium_e12_medium"];
    optional int32 L2_e15_medium_mu6 = 1304 [(root_branch)="L2_e15_medium_mu6"];
    optional int32 L2_e15_medium_xe20_noMu = 1305 [(root_branch)="L2_e15_medium_xe20_noMu"];
    optional int32 L2_e15_medium_xe25_noMu = 1306 [(root_branch)="L2_e15_medium_xe25_noMu"];
    optional int32 L2_e15_medium_xe30_noMu = 1307 [(root_branch)="L2_e15_medium_xe30_noMu"];
    optional int32 L2_e15_medium_xe35_noMu = 1308 [(root_branch)="L2_e15_medium_xe35_noMu"];
    optional int32 L2_e15_medium_xe40_loose_noMu = 1309 [(root_branch)="L2_e15_medium_xe40_loose_noMu"];
    
    optional int32 L2_e15_tight = 1400 [(root_branch)="L2_e15_tight"];
    optional int32 L2_e15_tight1 = 1401 [(root_branch)="L2_e15_tight1"];
    optional int32 L2_e15_tight_xe30_noMu = 1402 [(root_branch)="L2_e15_tight_xe30_noMu"];
    optional int32 L2_e18_medium = 1403 [(root_branch)="L2_e18_medium"];
    optional int32 L2_e18_medium_xe20_noMu = 1404 [(root_branch)="L2_e18_medium_xe20_noMu"];
    optional int32 L2_e18_tight = 1405 [(root_branch)="L2_e18_tight"];
    
    optional int32 L2_e20_L2Star_IDTrkNoCut = 1500 [(root_branch)="L2_e20_L2Star_IDTrkNoCut"];
    optional int32 L2_e20_loose = 1501 [(root_branch)="L2_e20_loose"];
    optional int32 L2_e20_loose1 = 1502 [(root_branch)="L2_e20_loose1"];
    optional int32 L2_e20_looseTrk = 1503 [(root_branch)="L2_e20_looseTrk"];
    optional int32 L2_e20_loose_2j10_a4tc_EFFS = 1504 [(root_branch)="L2_e20_loose_2j10_a4tc_EFFS"];
    optional int32 L2_e20_loose_3j10_a4tc_EFFS = 1505 [(root_branch)="L2_e20_loose_3j10_a4tc_EFFS"];
    optional int32 L2_e20_loose_4j10_a4tc_EFFS = 1506 [(root_branch)="L2_e20_loose_4j10_a4tc_EFFS"];
    optional int32 L2_e20_loose_IDTrkNoCut = 1507 [(root_branch)="L2_e20_loose_IDTrkNoCut"];
    optional int32 L2_e20_loose_TRT = 1508 [(root_branch)="L2_e20_loose_TRT"];
    optional int32 L2_e20_loose_xe20 = 1509 [(root_branch)="L2_e20_loose_xe20"];
    optional int32 L2_e20_loose_xe20_noMu = 1510 [(root_branch)="L2_e20_loose_xe20_noMu"];
    optional int32 L2_e20_loose_xe30 = 1511 [(root_branch)="L2_e20_loose_xe30"];
    optional int32 L2_e20_loose_xe30_noMu = 1512 [(root_branch)="L2_e20_loose_xe30_noMu"];
    optional int32 L2_e20_medium = 1513 [(root_branch)="L2_e20_medium"];
    optional int32 L2_e20_medium1 = 1514 [(root_branch)="L2_e20_medium1"];
    optional int32 L2_e20_medium2 = 1515 [(root_branch)="L2_e20_medium2"];
    optional int32 L2_e20_medium_IDTrkNoCut = 1516 [(root_branch)="L2_e20_medium_IDTrkNoCut"];
    optional int32 L2_e20_medium_SiTrk = 1517 [(root_branch)="L2_e20_medium_SiTrk"];
    optional int32 L2_e20_medium_TRT = 1518 [(root_branch)="L2_e20_medium_TRT"];
    optional int32 L2_e20_tight = 1519 [(root_branch)="L2_e20_tight"];
    optional int32 L2_e20_tight_e15_NoCut_Zee = 1520 [(root_branch)="L2_e20_tight_e15_NoCut_Zee"];
    
    optional int32 L2_e22_loose = 1600 [(root_branch)="L2_e22_loose"];
    optional int32 L2_e22_loose1 = 1601 [(root_branch)="L2_e22_loose1"];
    optional int32 L2_e22_looseTrk = 1602 [(root_branch)="L2_e22_looseTrk"];
    optional int32 L2_e22_medium = 1603 [(root_branch)="L2_e22_medium"];
    optional int32 L2_e22_medium1 = 1604 [(root_branch)="L2_e22_medium1"];
    optional int32 L2_e22_medium2 = 1605 [(root_branch)="L2_e22_medium2"];
    optional int32 L2_e22_medium_IDTrkNoCut = 1606 [(root_branch)="L2_e22_medium_IDTrkNoCut"];
    optional int32 L2_e22_medium_SiTrk = 1607 [(root_branch)="L2_e22_medium_SiTrk"];
    optional int32 L2_e22_medium_TRT = 1608 [(root_branch)="L2_e22_medium_TRT"];
    optional int32 L2_e22_tight = 1609 [(root_branch)="L2_e22_tight"];
    optional int32 L2_e25_loose = 1610 [(root_branch)="L2_e25_loose"];
    optional int32 L2_e25_medium = 1611 [(root_branch)="L2_e25_medium"];
    optional int32 L2_e30_loose = 1612 [(root_branch)="L2_e30_loose"];
    optional int32 L2_e30_medium = 1613 [(root_branch)="L2_e30_medium"];
    optional int32 L2_e33_medium = 1614 [(root_branch)="L2_e33_medium"];
    optional int32 L2_e35_medium = 1615 [(root_branch)="L2_e35_medium"];
    optional int32 L2_e40_medium = 1616 [(root_branch)="L2_e40_medium"];
    optional int32 L2_e45_medium = 1617 [(root_branch)="L2_e45_medium"];
    optional int32 L2_e45_medium1 = 1618 [(root_branch)="L2_e45_medium1"];
    optional int32 L2_e5_NoCut_L2SW = 1619 [(root_branch)="L2_e5_NoCut_L2SW"];
    optional int32 L2_e5_NoCut_Ringer = 1620 [(root_branch)="L2_e5_NoCut_Ringer"];
    optional int32 L2_e5_NoCut_firstempty = 1621 [(root_branch)="L2_e5_NoCut_firstempty"];
    optional int32 L2_e5_medium_mu4 = 1622 [(root_branch)="L2_e5_medium_mu4"];
    optional int32 L2_e5_medium_mu6 = 1623 [(root_branch)="L2_e5_medium_mu6"];
    optional int32 L2_e5_medium_mu6_topo_loose = 1624 [(root_branch)="L2_e5_medium_mu6_topo_loose"];
    optional int32 L2_e5_medium_mu6_topo_medium = 1625 [(root_branch)="L2_e5_medium_mu6_topo_medium"];
    optional int32 L2_e5_tight = 1626 [(root_branch)="L2_e5_tight"];
    optional int32 L2_e5_tight_TRT = 1627 [(root_branch)="L2_e5_tight_TRT"];
    optional int32 L2_e5_tight_e14_etcut_Jpsi = 1628 [(root_branch)="L2_e5_tight_e14_etcut_Jpsi"];
    optional int32 L2_e5_tight_e4_etcut_Jpsi = 1629 [(root_branch)="L2_e5_tight_e4_etcut_Jpsi"];
    optional int32 L2_e5_tight_e4_etcut_Jpsi_SiTrk = 1630 [(root_branch)="L2_e5_tight_e4_etcut_Jpsi_SiTrk"];
    optional int32 L2_e5_tight_e4_etcut_Jpsi_TRT = 1631 [(root_branch)="L2_e5_tight_e4_etcut_Jpsi_TRT"];
    optional int32 L2_e5_tight_e5_NoCut = 1632 [(root_branch)="L2_e5_tight_e5_NoCut"];
    optional int32 L2_e5_tight_e5_NoCut_Jpsi = 1633 [(root_branch)="L2_e5_tight_e5_NoCut_Jpsi"];
    optional int32 L2_e5_tight_e7_etcut_Jpsi = 1634 [(root_branch)="L2_e5_tight_e7_etcut_Jpsi"];
    optional int32 L2_e5_tight_e9_etcut_Jpsi = 1635 [(root_branch)="L2_e5_tight_e9_etcut_Jpsi"];
    
    optional int32 L2_e60_loose = 1700 [(root_branch)="L2_e60_loose"];
    optional int32 L2_e6T_medium = 1701 [(root_branch)="L2_e6T_medium"];
    
    optional int32 L2_e7_tight_e14_etcut_Jpsi = 1800 [(root_branch)="L2_e7_tight_e14_etcut_Jpsi"];
    optional int32 L2_e9_tight_e5_tight_Jpsi = 1801 [(root_branch)="L2_e9_tight_e5_tight_Jpsi"];
    optional int32 L2_eb_physics = 1802 [(root_branch)="L2_eb_physics"];
    optional int32 L2_eb_physics_empty = 1803 [(root_branch)="L2_eb_physics_empty"];
    optional int32 L2_eb_physics_firstempty = 1804 [(root_branch)="L2_eb_physics_firstempty"];
    optional int32 L2_eb_physics_noL1PS = 1805 [(root_branch)="L2_eb_physics_noL1PS"];
    optional int32 L2_eb_physics_unpaired_iso = 1806 [(root_branch)="L2_eb_physics_unpaired_iso"];
    optional int32 L2_eb_physics_unpaired_noniso = 1807 [(root_branch)="L2_eb_physics_unpaired_noniso"];
    optional int32 L2_eb_random = 1808 [(root_branch)="L2_eb_random"];
    optional int32 L2_eb_random_empty = 1809 [(root_branch)="L2_eb_random_empty"];
    optional int32 L2_eb_random_firstempty = 1810 [(root_branch)="L2_eb_random_firstempty"];
    optional int32 L2_eb_random_unpaired_iso = 1811 [(root_branch)="L2_eb_random_unpaired_iso"];
    
    optional int32 L2_em105_passHLT = 1900 [(root_branch)="L2_em105_passHLT"];
    optional int32 L2_em3_empty_larcalib = 1901 [(root_branch)="L2_em3_empty_larcalib"];
    optional int32 L2_em5_empty_larcalib = 1902 [(root_branch)="L2_em5_empty_larcalib"];
    
}