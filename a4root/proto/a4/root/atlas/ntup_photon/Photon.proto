package a4.root.atlas.ntup_photon;
import "a4/root/RootExtension.proto";

message Photon {
    optional float E = 1 [(root_branch)="E"];
    optional float Et = 2 [(root_branch)="Et"];
    optional float pt = 3 [(root_branch)="pt"];
    optional float m = 4 [(root_branch)="m"];
    optional float eta = 5 [(root_branch)="eta"];
    optional float phi = 6 [(root_branch)="phi"];
    optional float px = 7 [(root_branch)="px"];
    optional float py = 8 [(root_branch)="py"];
    optional float pz = 9 [(root_branch)="pz"];
    
    optional int32 author = 100 [(root_branch)="author"];
    
    optional int32 isRecovered = 200 [(root_branch)="isRecovered"];
    
    optional uint32 isEM = 300 [(root_branch)="isEM"];
    optional uint32 isEMLoose = 301 [(root_branch)="isEMLoose"];
    optional uint32 isEMMedium = 302 [(root_branch)="isEMMedium"];
    optional uint32 isEMTight = 303 [(root_branch)="isEMTight"];
    
    optional uint32 OQ = 400 [(root_branch)="OQ"];
    optional uint32 OQRecalc = 401 [(root_branch)="OQRecalc"];
    
    optional int32 convFlag = 500 [(root_branch)="convFlag"];
    optional int32 isConv = 501 [(root_branch)="isConv"];
    optional int32 nConv = 502 [(root_branch)="nConv"];
    optional int32 nSingleTrackConv = 503 [(root_branch)="nSingleTrackConv"];
    optional int32 nDoubleTrackConv = 504 [(root_branch)="nDoubleTrackConv"];
    
    optional int32 type = 600 [(root_branch)="type"];
    
    optional int32 origin = 700 [(root_branch)="origin"];
    
    optional float truth_deltaRRecPhoton = 800 [(root_branch)="truth_deltaRRecPhoton"];
    optional float truth_E = 801 [(root_branch)="truth_E"];
    optional float truth_pt = 802 [(root_branch)="truth_pt"];
    optional float truth_eta = 803 [(root_branch)="truth_eta"];
    optional float truth_phi = 804 [(root_branch)="truth_phi"];
    optional int32 truth_type = 805 [(root_branch)="truth_type"];
    optional int32 truth_status = 806 [(root_branch)="truth_status"];
    optional int32 truth_barcode = 807 [(root_branch)="truth_barcode"];
    optional int32 truth_mothertype = 808 [(root_branch)="truth_mothertype"];
    optional int32 truth_motherbarcode = 809 [(root_branch)="truth_motherbarcode"];
    optional int32 truth_index = 810 [(root_branch)="truth_index"];
    optional int32 truth_matched = 811 [(root_branch)="truth_matched"];
    
    optional int32 loose = 900 [(root_branch)="loose"];
    optional int32 looseIso = 901 [(root_branch)="looseIso"];
    
    optional int32 tight = 1000 [(root_branch)="tight"];
    optional int32 tightIso = 1001 [(root_branch)="tightIso"];
    
    optional int32 looseAR = 1100 [(root_branch)="looseAR"];
    optional int32 looseARIso = 1101 [(root_branch)="looseARIso"];
    
    optional int32 tightAR = 1200 [(root_branch)="tightAR"];
    optional int32 tightARIso = 1201 [(root_branch)="tightARIso"];
    
    optional int32 goodOQ = 1300 [(root_branch)="goodOQ"];
    
    optional float Ethad = 1400 [(root_branch)="Ethad"];
    optional float Ethad1 = 1401 [(root_branch)="Ethad1"];
    optional float E033 = 1402 [(root_branch)="E033"];
    optional float f1 = 1403 [(root_branch)="f1"];
    optional float f1core = 1404 [(root_branch)="f1core"];
    optional float Emins1 = 1405 [(root_branch)="Emins1"];
    optional float fside = 1406 [(root_branch)="fside"];
    optional float Emax2 = 1407 [(root_branch)="Emax2"];
    optional float ws3 = 1408 [(root_branch)="ws3"];
    optional float wstot = 1409 [(root_branch)="wstot"];
    optional float E132 = 1410 [(root_branch)="E132"];
    optional float E1152 = 1411 [(root_branch)="E1152"];
    optional float emaxs1 = 1412 [(root_branch)="emaxs1"];
    optional float deltaEs = 1413 [(root_branch)="deltaEs"];
    optional float E233 = 1414 [(root_branch)="E233"];
    optional float E237 = 1415 [(root_branch)="E237"];
    optional float E277 = 1416 [(root_branch)="E277"];
    optional float weta2 = 1417 [(root_branch)="weta2"];
    optional float f3 = 1418 [(root_branch)="f3"];
    optional float f3core = 1419 [(root_branch)="f3core"];
    
    optional float rphiallcalo = 1500 [(root_branch)="rphiallcalo"];
    
    optional float Etcone45 = 1600 [(root_branch)="Etcone45"];
    optional float Etcone15 = 1601 [(root_branch)="Etcone15"];
    optional float Etcone20 = 1602 [(root_branch)="Etcone20"];
    optional float Etcone25 = 1603 [(root_branch)="Etcone25"];
    optional float Etcone30 = 1604 [(root_branch)="Etcone30"];
    optional float Etcone35 = 1605 [(root_branch)="Etcone35"];
    optional float Etcone40 = 1606 [(root_branch)="Etcone40"];
    optional float ptcone20 = 1607 [(root_branch)="ptcone20"];
    optional float ptcone30 = 1608 [(root_branch)="ptcone30"];
    optional float ptcone40 = 1609 [(root_branch)="ptcone40"];
    optional float nucone20 = 1610 [(root_branch)="nucone20"];
    optional float nucone30 = 1611 [(root_branch)="nucone30"];
    optional float nucone40 = 1612 [(root_branch)="nucone40"];
    
    optional float Etcone15_pt_corrected = 1700 [(root_branch)="Etcone15_pt_corrected"];
    optional float Etcone20_pt_corrected = 1701 [(root_branch)="Etcone20_pt_corrected"];
    optional float Etcone25_pt_corrected = 1702 [(root_branch)="Etcone25_pt_corrected"];
    optional float Etcone30_pt_corrected = 1703 [(root_branch)="Etcone30_pt_corrected"];
    optional float Etcone35_pt_corrected = 1704 [(root_branch)="Etcone35_pt_corrected"];
    optional float Etcone40_pt_corrected = 1705 [(root_branch)="Etcone40_pt_corrected"];
    
    optional float convanglematch = 1800 [(root_branch)="convanglematch"];
    optional float convtrackmatch = 1801 [(root_branch)="convtrackmatch"];
    
    optional int32 hasconv = 1900 [(root_branch)="hasconv"];
    optional float convvtxx = 1901 [(root_branch)="convvtxx"];
    optional float convvtxy = 1902 [(root_branch)="convvtxy"];
    optional float convvtxz = 1903 [(root_branch)="convvtxz"];
    optional float Rconv = 1904 [(root_branch)="Rconv"];
    optional float zconv = 1905 [(root_branch)="zconv"];
    optional float convvtxchi2 = 1906 [(root_branch)="convvtxchi2"];
    optional float pt1conv = 1907 [(root_branch)="pt1conv"];
    
    optional int32 convtrk1nBLHits = 2000 [(root_branch)="convtrk1nBLHits"];
    optional int32 convtrk1nPixHits = 2001 [(root_branch)="convtrk1nPixHits"];
    optional int32 convtrk1nSCTHits = 2002 [(root_branch)="convtrk1nSCTHits"];
    optional int32 convtrk1nTRTHits = 2003 [(root_branch)="convtrk1nTRTHits"];
    
    optional float pt2conv = 2100 [(root_branch)="pt2conv"];
    
    optional int32 convtrk2nBLHits = 2200 [(root_branch)="convtrk2nBLHits"];
    optional int32 convtrk2nPixHits = 2201 [(root_branch)="convtrk2nPixHits"];
    optional int32 convtrk2nSCTHits = 2202 [(root_branch)="convtrk2nSCTHits"];
    optional int32 convtrk2nTRTHits = 2203 [(root_branch)="convtrk2nTRTHits"];
    
    optional float ptconv = 2300 [(root_branch)="ptconv"];
    optional float pzconv = 2301 [(root_branch)="pzconv"];
    
    optional float reta = 2400 [(root_branch)="reta"];
    optional float rphi = 2401 [(root_branch)="rphi"];
    
    optional float EtringnoisedR03sig2 = 2500 [(root_branch)="EtringnoisedR03sig2"];
    optional float EtringnoisedR03sig3 = 2501 [(root_branch)="EtringnoisedR03sig3"];
    optional float EtringnoisedR03sig4 = 2502 [(root_branch)="EtringnoisedR03sig4"];
    
    optional double isolationlikelihoodjets = 2600 [(root_branch)="isolationlikelihoodjets"];
    optional double isolationlikelihoodhqelectrons = 2601 [(root_branch)="isolationlikelihoodhqelectrons"];
    optional double loglikelihood = 2602 [(root_branch)="loglikelihood"];
    
    optional double photonweight = 2700 [(root_branch)="photonweight"];
    optional double photonbgweight = 2701 [(root_branch)="photonbgweight"];
    
    optional double neuralnet = 2800 [(root_branch)="neuralnet"];
    
    optional double Hmatrix = 2900 [(root_branch)="Hmatrix"];
    optional double Hmatrix5 = 2901 [(root_branch)="Hmatrix5"];
    
    optional double adaboost = 3000 [(root_branch)="adaboost"];
    
    optional float zvertex = 3100 [(root_branch)="zvertex"];
    optional float errz = 3101 [(root_branch)="errz"];
    
    optional float etap = 3200 [(root_branch)="etap"];
    optional float depth = 3201 [(root_branch)="depth"];
    
    optional float cl_E = 3300 [(root_branch)="cl_E"];
    optional float cl_pt = 3301 [(root_branch)="cl_pt"];
    optional float cl_eta = 3302 [(root_branch)="cl_eta"];
    optional float cl_phi = 3303 [(root_branch)="cl_phi"];
    
    optional float Es0 = 3400 [(root_branch)="Es0"];
    optional float etas0 = 3401 [(root_branch)="etas0"];
    optional float phis0 = 3402 [(root_branch)="phis0"];
    
    optional float Es1 = 3500 [(root_branch)="Es1"];
    optional float etas1 = 3501 [(root_branch)="etas1"];
    optional float phis1 = 3502 [(root_branch)="phis1"];
    
    optional float Es2 = 3600 [(root_branch)="Es2"];
    optional float etas2 = 3601 [(root_branch)="etas2"];
    optional float phis2 = 3602 [(root_branch)="phis2"];
    
    optional float Es3 = 3700 [(root_branch)="Es3"];
    optional float etas3 = 3701 [(root_branch)="etas3"];
    optional float phis3 = 3702 [(root_branch)="phis3"];
    
    optional float time = 3800 [(root_branch)="time"];
    
    optional float rawcl_Es0 = 3900 [(root_branch)="rawcl_Es0"];
    optional float rawcl_etas0 = 3901 [(root_branch)="rawcl_etas0"];
    optional float rawcl_phis0 = 3902 [(root_branch)="rawcl_phis0"];
    optional float rawcl_Es1 = 3903 [(root_branch)="rawcl_Es1"];
    optional float rawcl_etas1 = 3904 [(root_branch)="rawcl_etas1"];
    optional float rawcl_phis1 = 3905 [(root_branch)="rawcl_phis1"];
    optional float rawcl_Es2 = 3906 [(root_branch)="rawcl_Es2"];
    optional float rawcl_etas2 = 3907 [(root_branch)="rawcl_etas2"];
    optional float rawcl_phis2 = 3908 [(root_branch)="rawcl_phis2"];
    optional float rawcl_Es3 = 3909 [(root_branch)="rawcl_Es3"];
    optional float rawcl_etas3 = 3910 [(root_branch)="rawcl_etas3"];
    optional float rawcl_phis3 = 3911 [(root_branch)="rawcl_phis3"];
    optional float rawcl_E = 3912 [(root_branch)="rawcl_E"];
    optional float rawcl_pt = 3913 [(root_branch)="rawcl_pt"];
    optional float rawcl_eta = 3914 [(root_branch)="rawcl_eta"];
    optional float rawcl_phi = 3915 [(root_branch)="rawcl_phi"];
    
    optional int32 truth_isConv = 4000 [(root_branch)="truth_isConv"];
    optional int32 truth_isBrem = 4001 [(root_branch)="truth_isBrem"];
    optional int32 truth_isFromHardProc = 4002 [(root_branch)="truth_isFromHardProc"];
    optional int32 truth_isPhotonFromHardProc = 4003 [(root_branch)="truth_isPhotonFromHardProc"];
    optional float truth_Rconv = 4004 [(root_branch)="truth_Rconv"];
    optional float truth_zconv = 4005 [(root_branch)="truth_zconv"];
    
    optional float deltaEmax2 = 4100 [(root_branch)="deltaEmax2"];
    
    optional float calibHitsShowerDepth = 4200 [(root_branch)="calibHitsShowerDepth"];
    
    optional uint32 isIso = 4300 [(root_branch)="isIso"];
    
    optional float mvaptcone20 = 4400 [(root_branch)="mvaptcone20"];
    optional float mvaptcone30 = 4401 [(root_branch)="mvaptcone30"];
    optional float mvaptcone40 = 4402 [(root_branch)="mvaptcone40"];
    optional float topoEtcone20 = 4403 [(root_branch)="topoEtcone20"];
    optional float topoEtcone40 = 4404 [(root_branch)="topoEtcone40"];
    optional float topoEtcone60 = 4405 [(root_branch)="topoEtcone60"];
    
    optional float jet_dr = 4500 [(root_branch)="jet_dr"];
    optional float jet_E = 4501 [(root_branch)="jet_E"];
    optional float jet_pt = 4502 [(root_branch)="jet_pt"];
    optional float jet_m = 4503 [(root_branch)="jet_m"];
    optional float jet_eta = 4504 [(root_branch)="jet_eta"];
    optional float jet_phi = 4505 [(root_branch)="jet_phi"];
    optional float jet_truth_dr = 4506 [(root_branch)="jet_truth_dr"];
    optional float jet_truth_E = 4507 [(root_branch)="jet_truth_E"];
    optional float jet_truth_pt = 4508 [(root_branch)="jet_truth_pt"];
    optional float jet_truth_m = 4509 [(root_branch)="jet_truth_m"];
    optional float jet_truth_eta = 4510 [(root_branch)="jet_truth_eta"];
    optional float jet_truth_phi = 4511 [(root_branch)="jet_truth_phi"];
    optional int32 jet_truth_matched = 4512 [(root_branch)="jet_truth_matched"];
    optional int32 jet_matched = 4513 [(root_branch)="jet_matched"];
    
    optional float convIP = 4600 [(root_branch)="convIP"];
    optional float convIPRev = 4601 [(root_branch)="convIPRev"];
    
    optional float ptIsolationCone = 4700 [(root_branch)="ptIsolationCone"];
    optional float ptIsolationConePhAngle = 4701 [(root_branch)="ptIsolationConePhAngle"];
    
    optional float Etcone40_ED_corrected = 4800 [(root_branch)="Etcone40_ED_corrected"];
    optional float Etcone40_corrected = 4801 [(root_branch)="Etcone40_corrected"];
    
    optional float ES0_real = 4900 [(root_branch)="ES0_real"];
    optional float ES1_real = 4901 [(root_branch)="ES1_real"];
    optional float ES2_real = 4902 [(root_branch)="ES2_real"];
    optional float ES3_real = 4903 [(root_branch)="ES3_real"];
    
    optional float EcellS0 = 5000 [(root_branch)="EcellS0"];
    optional float etacellS0 = 5001 [(root_branch)="etacellS0"];
    
    optional float HPV_eta = 5100 [(root_branch)="HPV_eta"];
    optional float HPV_sigma_eta = 5101 [(root_branch)="HPV_sigma_eta"];
    optional float HPV_convTrk1_zvertex = 5102 [(root_branch)="HPV_convTrk1_zvertex"];
    optional float HPV_convTrk2_zvertex = 5103 [(root_branch)="HPV_convTrk2_zvertex"];
    optional float HPV_convTrk1_sigma_zvertex = 5104 [(root_branch)="HPV_convTrk1_sigma_zvertex"];
    optional float HPV_convTrk2_sigma_zvertex = 5105 [(root_branch)="HPV_convTrk2_sigma_zvertex"];
    optional float CaloPointing_zvertex = 5106 [(root_branch)="CaloPointing_zvertex"];
    optional float CaloPointing_sigma_zvertex = 5107 [(root_branch)="CaloPointing_sigma_zvertex"];
    optional float CaloPointing_eta = 5108 [(root_branch)="CaloPointing_eta"];
    optional float CaloPointing_sigma_eta = 5109 [(root_branch)="CaloPointing_sigma_eta"];
    
    optional float HPV_zvertex = 5200 [(root_branch)="HPV_zvertex"];
    optional float HPV_sigma_zvertex = 5201 [(root_branch)="HPV_sigma_zvertex"];
    optional float HPV_zvertex_neutral = 5202 [(root_branch)="HPV_zvertex_neutral"];
    optional float HPV_zvertex_charged = 5203 [(root_branch)="HPV_zvertex_charged"];
    optional float HPV_sigma_zvertex_neutral = 5204 [(root_branch)="HPV_sigma_zvertex_neutral"];
    optional float HPV_sigma_zvertex_charged = 5205 [(root_branch)="HPV_sigma_zvertex_charged"];
    
    optional float ambiguityResult = 5300 [(root_branch)="ambiguityResult"];
    
    optional float itune1 = 5400 [(root_branch)="itune1"];
    optional float itune2 = 5401 [(root_branch)="itune2"];
    optional float itune3 = 5402 [(root_branch)="itune3"];
    
    optional float trackIsol = 5500 [(root_branch)="trackIsol"];
    
    optional float PtIsolationCone_woIC = 5600 [(root_branch)="PtIsolationCone_woIC"];
    optional float PtIsolationConePhAngle_woIC = 5601 [(root_branch)="PtIsolationConePhAngle_woIC"];
    optional float trackIsol_woIC = 5602 [(root_branch)="trackIsol_woIC"];
    
    optional int32 selected = 5700 [(root_branch)="selected"];
    
    optional float parton_pt_max_MC = 5800 [(root_branch)="parton_pt_max_MC"];
    optional float parton_eta_MC = 5801 [(root_branch)="parton_eta_MC"];
    optional float parton_phi_MC = 5802 [(root_branch)="parton_phi_MC"];
    optional float parton_barcode_MC = 5803 [(root_branch)="parton_barcode_MC"];
    optional float parton_pdg_MC = 5804 [(root_branch)="parton_pdg_MC"];
    
    optional float etaS2_MC = 5900 [(root_branch)="etaS2_MC"];
    optional float phiS2_MC = 5901 [(root_branch)="phiS2_MC"];
    
    optional float XConv_MC = 6000 [(root_branch)="XConv_MC"];
    optional float YConv_MC = 6001 [(root_branch)="YConv_MC"];
    
    optional int32 isG4part = 6100 [(root_branch)="isG4part"];
    
    optional float partonIsolation15_UE_MC = 6200 [(root_branch)="partonIsolation15_UE_MC"];
    optional float partonIsolation20_UE_MC = 6201 [(root_branch)="partonIsolation20_UE_MC"];
    optional float partonIsolation25_UE_MC = 6202 [(root_branch)="partonIsolation25_UE_MC"];
    optional float partonIsolation30_UE_MC = 6203 [(root_branch)="partonIsolation30_UE_MC"];
    optional float partonIsolation35_UE_MC = 6204 [(root_branch)="partonIsolation35_UE_MC"];
    optional float partonIsolation40_UE_MC = 6205 [(root_branch)="partonIsolation40_UE_MC"];
    optional float partonIsolation45_UE_MC = 6206 [(root_branch)="partonIsolation45_UE_MC"];
    optional float partonIsolation60_UE_MC = 6207 [(root_branch)="partonIsolation60_UE_MC"];
    optional float partonIsolation15_MC = 6208 [(root_branch)="partonIsolation15_MC"];
    optional float partonIsolation20_MC = 6209 [(root_branch)="partonIsolation20_MC"];
    optional float partonIsolation25_MC = 6210 [(root_branch)="partonIsolation25_MC"];
    optional float partonIsolation30_MC = 6211 [(root_branch)="partonIsolation30_MC"];
    optional float partonIsolation35_MC = 6212 [(root_branch)="partonIsolation35_MC"];
    optional float partonIsolation40_MC = 6213 [(root_branch)="partonIsolation40_MC"];
    optional float partonIsolation45_MC = 6214 [(root_branch)="partonIsolation45_MC"];
    optional float partonIsolation60_MC = 6215 [(root_branch)="partonIsolation60_MC"];
    optional float particleIsolation40_MC = 6216 [(root_branch)="particleIsolation40_MC"];
    optional float particleIsolation40_ED_corrected_MC = 6217 [(root_branch)="particleIsolation40_ED_corrected_MC"];
    optional float particleIsolation40_ED_corrected_reco_MC = 6218 [(root_branch)="particleIsolation40_ED_corrected_reco_MC"];
    
    optional uint32 isGoodOQbits = 6300 [(root_branch)="isGoodOQbits"];
    optional int32 isGoodOQphoton = 6301 [(root_branch)="isGoodOQphoton"];
    optional int32 isGoodOQelectron = 6302 [(root_branch)="isGoodOQelectron"];
    
    optional float convTrk1_chi2 = 6400 [(root_branch)="convTrk1_chi2"];
    optional float convTrk2_chi2 = 6401 [(root_branch)="convTrk2_chi2"];
    optional float convTrk1_expectHitInBLayer = 6402 [(root_branch)="convTrk1_expectHitInBLayer"];
    optional float convTrk1_numTRTOutliers = 6403 [(root_branch)="convTrk1_numTRTOutliers"];
    optional float convTrk1_numTRTHTHits = 6404 [(root_branch)="convTrk1_numTRTHTHits"];
    optional float convTrk1_numTRTHTOutliers = 6405 [(root_branch)="convTrk1_numTRTHTOutliers"];
    optional float convTrk2_expectHitInBLayer = 6406 [(root_branch)="convTrk2_expectHitInBLayer"];
    optional float convTrk2_numTRTOutliers = 6407 [(root_branch)="convTrk2_numTRTOutliers"];
    optional float convTrk2_numTRTHTHits = 6408 [(root_branch)="convTrk2_numTRTHTHits"];
    optional float convTrk2_numTRTHTOutliers = 6409 [(root_branch)="convTrk2_numTRTHTOutliers"];
    optional float convTrk1_trtPID = 6410 [(root_branch)="convTrk1_trtPID"];
    optional float convTrk2_trtPID = 6411 [(root_branch)="convTrk2_trtPID"];
    optional float convTrk1_trtPIDHT = 6412 [(root_branch)="convTrk1_trtPIDHT"];
    optional float convTrk2_trtPIDHT = 6413 [(root_branch)="convTrk2_trtPIDHT"];
    optional float convTrk1_trtPIDToT = 6414 [(root_branch)="convTrk1_trtPIDToT"];
    optional float convTrk2_trtPIDToT = 6415 [(root_branch)="convTrk2_trtPIDToT"];
    optional float convTrk1_ToTvar = 6416 [(root_branch)="convTrk1_ToTvar"];
    optional float convTrk2_ToTvar = 6417 [(root_branch)="convTrk2_ToTvar"];
    optional float convTrk1_trtRatioHT = 6418 [(root_branch)="convTrk1_trtRatioHT"];
    optional float convTrk2_trtRatioHT = 6419 [(root_branch)="convTrk2_trtRatioHT"];
    optional float convTrk1_charge = 6420 [(root_branch)="convTrk1_charge"];
    optional float convTrk2_charge = 6421 [(root_branch)="convTrk2_charge"];
    optional float convTrk1_DeltaEta_track_calo = 6422 [(root_branch)="convTrk1_DeltaEta_track_calo"];
    optional float convTrk2_DeltaEta_track_calo = 6423 [(root_branch)="convTrk2_DeltaEta_track_calo"];
    optional float convTrk1_DeltaPhi_track_calo = 6424 [(root_branch)="convTrk1_DeltaPhi_track_calo"];
    optional float convTrk2_DeltaPhi_track_calo = 6425 [(root_branch)="convTrk2_DeltaPhi_track_calo"];
    
    optional float XConv = 6500 [(root_branch)="XConv"];
    optional float YConv = 6501 [(root_branch)="YConv"];
    optional float conv_chi2 = 6502 [(root_branch)="conv_chi2"];
    optional float conv_dcottheta = 6503 [(root_branch)="conv_dcottheta"];
    optional float conv_dphi = 6504 [(root_branch)="conv_dphi"];
    optional float conv_dist = 6505 [(root_branch)="conv_dist"];
    optional float conv_DR1R2 = 6506 [(root_branch)="conv_DR1R2"];
    optional float conv_p = 6507 [(root_branch)="conv_p"];
    optional float conv_phi = 6508 [(root_branch)="conv_phi"];
    optional float conv_theta = 6509 [(root_branch)="conv_theta"];
    optional float conv_perr = 6510 [(root_branch)="conv_perr"];
    optional float conv_phierr = 6511 [(root_branch)="conv_phierr"];
    optional float conv_thetaerr = 6512 [(root_branch)="conv_thetaerr"];
    optional float conv_GSF_p = 6513 [(root_branch)="conv_GSF_p"];
    optional float conv_GSF_phi = 6514 [(root_branch)="conv_GSF_phi"];
    optional float conv_GSF_theta = 6515 [(root_branch)="conv_GSF_theta"];
    optional float conv_GSF_perr = 6516 [(root_branch)="conv_GSF_perr"];
    optional float conv_GSF_phierr = 6517 [(root_branch)="conv_GSF_phierr"];
    optional float conv_GSF_thetaerr = 6518 [(root_branch)="conv_GSF_thetaerr"];
    optional float conv_DNA_p = 6519 [(root_branch)="conv_DNA_p"];
    optional float conv_DNA_phi = 6520 [(root_branch)="conv_DNA_phi"];
    optional float conv_DNA_theta = 6521 [(root_branch)="conv_DNA_theta"];
    optional float conv_DNA_perr = 6522 [(root_branch)="conv_DNA_perr"];
    optional float conv_DNA_phierr = 6523 [(root_branch)="conv_DNA_phierr"];
    optional float conv_DNA_thetaerr = 6524 [(root_branch)="conv_DNA_thetaerr"];
    optional float Etcone10_ED_corrected = 6525 [(root_branch)="Etcone10_ED_corrected"];
    optional float Etcone15_ED_corrected = 6526 [(root_branch)="Etcone15_ED_corrected"];
    optional float Etcone20_ED_corrected = 6527 [(root_branch)="Etcone20_ED_corrected"];
    optional float Etcone25_ED_corrected = 6528 [(root_branch)="Etcone25_ED_corrected"];
    optional float Etcone30_ED_corrected = 6529 [(root_branch)="Etcone30_ED_corrected"];
    optional float Etcone35_ED_corrected = 6530 [(root_branch)="Etcone35_ED_corrected"];
    optional float Etcone10_corrected = 6531 [(root_branch)="Etcone10_corrected"];
    optional float Etcone15_corrected = 6532 [(root_branch)="Etcone15_corrected"];
    optional float Etcone20_corrected = 6533 [(root_branch)="Etcone20_corrected"];
    optional float Etcone25_corrected = 6534 [(root_branch)="Etcone25_corrected"];
    optional float Etcone30_corrected = 6535 [(root_branch)="Etcone30_corrected"];
    optional float Etcone35_corrected = 6536 [(root_branch)="Etcone35_corrected"];
    optional float Etcone10_ED_corrected_new = 6537 [(root_branch)="Etcone10_ED_corrected_new"];
    optional float Etcone15_ED_corrected_new = 6538 [(root_branch)="Etcone15_ED_corrected_new"];
    optional float Etcone20_ED_corrected_new = 6539 [(root_branch)="Etcone20_ED_corrected_new"];
    optional float Etcone25_ED_corrected_new = 6540 [(root_branch)="Etcone25_ED_corrected_new"];
    optional float Etcone30_ED_corrected_new = 6541 [(root_branch)="Etcone30_ED_corrected_new"];
    optional float Etcone35_ED_corrected_new = 6542 [(root_branch)="Etcone35_ED_corrected_new"];
    optional float Etcone40_ED_corrected_new = 6543 [(root_branch)="Etcone40_ED_corrected_new"];
    optional float Etcone10_corrected_new = 6544 [(root_branch)="Etcone10_corrected_new"];
    optional float Etcone15_corrected_new = 6545 [(root_branch)="Etcone15_corrected_new"];
    optional float Etcone20_corrected_new = 6546 [(root_branch)="Etcone20_corrected_new"];
    optional float Etcone25_corrected_new = 6547 [(root_branch)="Etcone25_corrected_new"];
    optional float Etcone30_corrected_new = 6548 [(root_branch)="Etcone30_corrected_new"];
    optional float Etcone35_corrected_new = 6549 [(root_branch)="Etcone35_corrected_new"];
    optional float Etcone40_corrected_new = 6550 [(root_branch)="Etcone40_corrected_new"];
    
    optional float cells35_Etcone20 = 6600 [(root_branch)="cells35_Etcone20"];
    optional float cells35_Etcone30 = 6601 [(root_branch)="cells35_Etcone30"];
    optional float cells35_Etcone40 = 6602 [(root_branch)="cells35_Etcone40"];
    optional float cells55_Etcone20 = 6603 [(root_branch)="cells55_Etcone20"];
    optional float cells55_Etcone30 = 6604 [(root_branch)="cells55_Etcone30"];
    optional float cells55_Etcone40 = 6605 [(root_branch)="cells55_Etcone40"];
    optional float Etcone20Iso = 6606 [(root_branch)="Etcone20Iso"];
    optional float Etcone30Iso = 6607 [(root_branch)="Etcone30Iso"];
    optional float Etcone40Iso = 6608 [(root_branch)="Etcone40Iso"];
    optional float cells35_Etcone20Iso = 6609 [(root_branch)="cells35_Etcone20Iso"];
    optional float cells35_Etcone30Iso = 6610 [(root_branch)="cells35_Etcone30Iso"];
    optional float cells35_Etcone40Iso = 6611 [(root_branch)="cells35_Etcone40Iso"];
    optional float cells55_Etcone20Iso = 6612 [(root_branch)="cells55_Etcone20Iso"];
    optional float cells55_Etcone30Iso = 6613 [(root_branch)="cells55_Etcone30Iso"];
    optional float cells55_Etcone40Iso = 6614 [(root_branch)="cells55_Etcone40Iso"];
    
    optional float ED_median = 6700 [(root_branch)="ED_median"];
    optional float ED_sigma = 6701 [(root_branch)="ED_sigma"];
    optional int32 ED_Njets = 6702 [(root_branch)="ED_Njets"];
    
    optional float ED_median_new = 6800 [(root_branch)="ED_median_new"];
    optional float ED_sigma_new = 6801 [(root_branch)="ED_sigma_new"];
    optional int32 ED_Njets_new = 6802 [(root_branch)="ED_Njets_new"];
    
    optional float transmin_etcone40 = 6900 [(root_branch)="transmin_etcone40"];
    optional float transmax_etcone40 = 6901 [(root_branch)="transmax_etcone40"];
    optional float transmin_etcone100 = 6902 [(root_branch)="transmin_etcone100"];
    optional float transmax_etcone100 = 6903 [(root_branch)="transmax_etcone100"];
    optional float transmin = 6904 [(root_branch)="transmin"];
    optional float transmax = 6905 [(root_branch)="transmax"];
    optional float transmin_loweta = 6906 [(root_branch)="transmin_loweta"];
    optional float transmax_loweta = 6907 [(root_branch)="transmax_loweta"];
    
    optional float topodr = 7000 [(root_branch)="topodr"];
    optional float topopt = 7001 [(root_branch)="topopt"];
    optional float topoeta = 7002 [(root_branch)="topoeta"];
    optional float topophi = 7003 [(root_branch)="topophi"];
    optional int32 topomatched = 7004 [(root_branch)="topomatched"];
    optional float topoEMdr = 7005 [(root_branch)="topoEMdr"];
    optional float topoEMpt = 7006 [(root_branch)="topoEMpt"];
    optional float topoEMeta = 7007 [(root_branch)="topoEMeta"];
    optional float topoEMphi = 7008 [(root_branch)="topoEMphi"];
    optional int32 topoEMmatched = 7009 [(root_branch)="topoEMmatched"];
    
    optional float EF_dr = 7100 [(root_branch)="EF_dr"];
    optional int32 EF_index = 7101 [(root_branch)="EF_index"];
    
    optional float L2_dr = 7200 [(root_branch)="L2_dr"];
    optional int32 L2_index = 7201 [(root_branch)="L2_index"];
    optional float L1_dr = 7202 [(root_branch)="L1_dr"];
    optional int32 L1_index = 7203 [(root_branch)="L1_index"];
    
    optional float jet_AntiKt4TopoEMJets_dr = 7300 [(root_branch)="jet_AntiKt4TopoEMJets_dr"];
    optional int32 jet_AntiKt4TopoEMJets_index = 7301 [(root_branch)="jet_AntiKt4TopoEMJets_index"];
    optional int32 jet_AntiKt4TopoEMJets_matched = 7302 [(root_branch)="jet_AntiKt4TopoEMJets_matched"];
    optional float jet_AntiKt6TopoEMJets_dr = 7303 [(root_branch)="jet_AntiKt6TopoEMJets_dr"];
    optional int32 jet_AntiKt6TopoEMJets_index = 7304 [(root_branch)="jet_AntiKt6TopoEMJets_index"];
    optional int32 jet_AntiKt6TopoEMJets_matched = 7305 [(root_branch)="jet_AntiKt6TopoEMJets_matched"];
    
    optional int32 el_index = 7400 [(root_branch)="el_index"];
    
    optional float etconoisedR04Sig2 = 7500 [(root_branch)="etconoisedR04Sig2"];
    optional float etconoisedR04Sig3 = 7501 [(root_branch)="etconoisedR04Sig3"];
    
    optional int32 convTrk_n = 7600 [(root_branch)="convTrk_n"];
    repeated int32 convTrk_index = 7601 [(root_branch)="convTrk_index"];
    repeated int32 convTrk_trackfitter = 7602 [(root_branch)="convTrk_trackfitter"];
    repeated int32 convTrk_trackpatternReco1 = 7603 [(root_branch)="convTrk_trackpatternReco1"];
    repeated int32 convTrk_trackpatternReco2 = 7604 [(root_branch)="convTrk_trackpatternReco2"];
    repeated int32 convTrk_trackseedFinder = 7605 [(root_branch)="convTrk_trackseedFinder"];
    
}