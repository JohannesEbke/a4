package a4.root.atlas.ntup_photon;
import "a4/root/RootExtension.proto";

message Photon {
    optional float E = 1 [(root_branch)="E"];
    optional float Et = 2 [(root_branch)="Et"];
    optional float pt = 3 [(root_branch)="pt"];
    optional float m = 4 [(root_branch)="m"];
    optional float eta = 5 [(root_branch)="eta"];
    optional float phi = 6 [(root_branch)="phi"];
    optional float px = 7 [(root_branch)="px"];
    optional float py = 8 [(root_branch)="py"];
    optional float pz = 9 [(root_branch)="pz"];
    
    optional int32 author = 100 [(root_branch)="author"];
    
    optional int32 isRecovered = 200 [(root_branch)="isRecovered"];
    
    optional uint32 isEM = 300 [(root_branch)="isEM"];
    optional uint32 isEMLoose = 301 [(root_branch)="isEMLoose"];
    optional uint32 isEMMedium = 302 [(root_branch)="isEMMedium"];
    optional uint32 isEMTight = 303 [(root_branch)="isEMTight"];
    
    optional uint32 OQ = 400 [(root_branch)="OQ"];
    optional uint32 OQRecalc = 401 [(root_branch)="OQRecalc"];
    
    optional int32 convFlag = 500 [(root_branch)="convFlag"];
    optional int32 isConv = 501 [(root_branch)="isConv"];
    optional int32 nConv = 502 [(root_branch)="nConv"];
    optional int32 nSingleTrackConv = 503 [(root_branch)="nSingleTrackConv"];
    optional int32 nDoubleTrackConv = 504 [(root_branch)="nDoubleTrackConv"];
    
    optional int32 type = 600 [(root_branch)="type"];
    optional int32 origin = 601 [(root_branch)="origin"];
    
    optional float truth_deltaRRecPhoton = 700 [(root_branch)="truth_deltaRRecPhoton"];
    optional float truth_E = 701 [(root_branch)="truth_E"];
    optional float truth_pt = 702 [(root_branch)="truth_pt"];
    optional float truth_eta = 703 [(root_branch)="truth_eta"];
    optional float truth_phi = 704 [(root_branch)="truth_phi"];
    optional int32 truth_type = 705 [(root_branch)="truth_type"];
    optional int32 truth_status = 706 [(root_branch)="truth_status"];
    optional int32 truth_barcode = 707 [(root_branch)="truth_barcode"];
    optional int32 truth_mothertype = 708 [(root_branch)="truth_mothertype"];
    optional int32 truth_motherbarcode = 709 [(root_branch)="truth_motherbarcode"];
    optional int32 truth_index = 710 [(root_branch)="truth_index"];
    optional int32 truth_matched = 711 [(root_branch)="truth_matched"];
    
    optional int32 loose = 800 [(root_branch)="loose"];
    optional int32 looseIso = 801 [(root_branch)="looseIso"];
    optional int32 tight = 802 [(root_branch)="tight"];
    optional int32 tightIso = 803 [(root_branch)="tightIso"];
    optional int32 looseAR = 804 [(root_branch)="looseAR"];
    optional int32 looseARIso = 805 [(root_branch)="looseARIso"];
    optional int32 tightAR = 806 [(root_branch)="tightAR"];
    optional int32 tightARIso = 807 [(root_branch)="tightARIso"];
    
    optional int32 goodOQ = 900 [(root_branch)="goodOQ"];
    
    optional float Ethad = 1000 [(root_branch)="Ethad"];
    optional float Ethad1 = 1001 [(root_branch)="Ethad1"];
    optional float E033 = 1002 [(root_branch)="E033"];
    optional float f1 = 1003 [(root_branch)="f1"];
    optional float f1core = 1004 [(root_branch)="f1core"];
    optional float Emins1 = 1005 [(root_branch)="Emins1"];
    optional float fside = 1006 [(root_branch)="fside"];
    optional float Emax2 = 1007 [(root_branch)="Emax2"];
    optional float ws3 = 1008 [(root_branch)="ws3"];
    optional float wstot = 1009 [(root_branch)="wstot"];
    optional float E132 = 1010 [(root_branch)="E132"];
    optional float E1152 = 1011 [(root_branch)="E1152"];
    optional float emaxs1 = 1012 [(root_branch)="emaxs1"];
    optional float deltaEs = 1013 [(root_branch)="deltaEs"];
    optional float E233 = 1014 [(root_branch)="E233"];
    optional float E237 = 1015 [(root_branch)="E237"];
    optional float E277 = 1016 [(root_branch)="E277"];
    optional float weta2 = 1017 [(root_branch)="weta2"];
    optional float f3 = 1018 [(root_branch)="f3"];
    optional float f3core = 1019 [(root_branch)="f3core"];
    
    optional float rphiallcalo = 1100 [(root_branch)="rphiallcalo"];
    
    optional float Etcone45 = 1200 [(root_branch)="Etcone45"];
    optional float Etcone15 = 1201 [(root_branch)="Etcone15"];
    optional float Etcone20 = 1202 [(root_branch)="Etcone20"];
    optional float Etcone25 = 1203 [(root_branch)="Etcone25"];
    optional float Etcone30 = 1204 [(root_branch)="Etcone30"];
    optional float Etcone35 = 1205 [(root_branch)="Etcone35"];
    optional float Etcone40 = 1206 [(root_branch)="Etcone40"];
    optional float ptcone20 = 1207 [(root_branch)="ptcone20"];
    optional float ptcone30 = 1208 [(root_branch)="ptcone30"];
    optional float ptcone40 = 1209 [(root_branch)="ptcone40"];
    optional float nucone20 = 1210 [(root_branch)="nucone20"];
    optional float nucone30 = 1211 [(root_branch)="nucone30"];
    optional float nucone40 = 1212 [(root_branch)="nucone40"];
    
    optional float Etcone15_pt_corrected = 1300 [(root_branch)="Etcone15_pt_corrected"];
    optional float Etcone20_pt_corrected = 1301 [(root_branch)="Etcone20_pt_corrected"];
    optional float Etcone25_pt_corrected = 1302 [(root_branch)="Etcone25_pt_corrected"];
    optional float Etcone30_pt_corrected = 1303 [(root_branch)="Etcone30_pt_corrected"];
    optional float Etcone35_pt_corrected = 1304 [(root_branch)="Etcone35_pt_corrected"];
    optional float Etcone40_pt_corrected = 1305 [(root_branch)="Etcone40_pt_corrected"];
    
    optional float convanglematch = 1400 [(root_branch)="convanglematch"];
    optional float convtrackmatch = 1401 [(root_branch)="convtrackmatch"];
    
    optional int32 hasconv = 1500 [(root_branch)="hasconv"];
    optional float convvtxx = 1501 [(root_branch)="convvtxx"];
    optional float convvtxy = 1502 [(root_branch)="convvtxy"];
    optional float convvtxz = 1503 [(root_branch)="convvtxz"];
    optional float Rconv = 1504 [(root_branch)="Rconv"];
    optional float zconv = 1505 [(root_branch)="zconv"];
    optional float convvtxchi2 = 1506 [(root_branch)="convvtxchi2"];
    optional float pt1conv = 1507 [(root_branch)="pt1conv"];
    
    optional int32 convtrk1nBLHits = 1600 [(root_branch)="convtrk1nBLHits"];
    optional int32 convtrk1nPixHits = 1601 [(root_branch)="convtrk1nPixHits"];
    optional int32 convtrk1nSCTHits = 1602 [(root_branch)="convtrk1nSCTHits"];
    optional int32 convtrk1nTRTHits = 1603 [(root_branch)="convtrk1nTRTHits"];
    
    optional float pt2conv = 1700 [(root_branch)="pt2conv"];
    
    optional int32 convtrk2nBLHits = 1800 [(root_branch)="convtrk2nBLHits"];
    optional int32 convtrk2nPixHits = 1801 [(root_branch)="convtrk2nPixHits"];
    optional int32 convtrk2nSCTHits = 1802 [(root_branch)="convtrk2nSCTHits"];
    optional int32 convtrk2nTRTHits = 1803 [(root_branch)="convtrk2nTRTHits"];
    
    optional float ptconv = 1900 [(root_branch)="ptconv"];
    optional float pzconv = 1901 [(root_branch)="pzconv"];
    
    optional float reta = 2000 [(root_branch)="reta"];
    optional float rphi = 2001 [(root_branch)="rphi"];
    
    optional float EtringnoisedR03sig2 = 2100 [(root_branch)="EtringnoisedR03sig2"];
    optional float EtringnoisedR03sig3 = 2101 [(root_branch)="EtringnoisedR03sig3"];
    optional float EtringnoisedR03sig4 = 2102 [(root_branch)="EtringnoisedR03sig4"];
    
    optional double isolationlikelihoodjets = 2200 [(root_branch)="isolationlikelihoodjets"];
    optional double isolationlikelihoodhqelectrons = 2201 [(root_branch)="isolationlikelihoodhqelectrons"];
    optional double loglikelihood = 2202 [(root_branch)="loglikelihood"];
    
    optional double photonweight = 2300 [(root_branch)="photonweight"];
    optional double photonbgweight = 2301 [(root_branch)="photonbgweight"];
    
    optional double neuralnet = 2400 [(root_branch)="neuralnet"];
    
    optional double Hmatrix = 2500 [(root_branch)="Hmatrix"];
    optional double Hmatrix5 = 2501 [(root_branch)="Hmatrix5"];
    
    optional double adaboost = 2600 [(root_branch)="adaboost"];
    
    optional float zvertex = 2700 [(root_branch)="zvertex"];
    optional float errz = 2701 [(root_branch)="errz"];
    
    optional float etap = 2800 [(root_branch)="etap"];
    optional float depth = 2801 [(root_branch)="depth"];
    
    optional float cl_E = 2900 [(root_branch)="cl_E"];
    optional float cl_pt = 2901 [(root_branch)="cl_pt"];
    optional float cl_eta = 2902 [(root_branch)="cl_eta"];
    optional float cl_phi = 2903 [(root_branch)="cl_phi"];
    
    optional float Es0 = 3000 [(root_branch)="Es0"];
    optional float etas0 = 3001 [(root_branch)="etas0"];
    optional float phis0 = 3002 [(root_branch)="phis0"];
    
    optional float Es1 = 3100 [(root_branch)="Es1"];
    optional float etas1 = 3101 [(root_branch)="etas1"];
    optional float phis1 = 3102 [(root_branch)="phis1"];
    
    optional float Es2 = 3200 [(root_branch)="Es2"];
    optional float etas2 = 3201 [(root_branch)="etas2"];
    optional float phis2 = 3202 [(root_branch)="phis2"];
    
    optional float Es3 = 3300 [(root_branch)="Es3"];
    optional float etas3 = 3301 [(root_branch)="etas3"];
    optional float phis3 = 3302 [(root_branch)="phis3"];
    
    optional float time = 3400 [(root_branch)="time"];
    
    optional float rawcl_Es0 = 3500 [(root_branch)="rawcl_Es0"];
    optional float rawcl_etas0 = 3501 [(root_branch)="rawcl_etas0"];
    optional float rawcl_phis0 = 3502 [(root_branch)="rawcl_phis0"];
    optional float rawcl_Es1 = 3503 [(root_branch)="rawcl_Es1"];
    optional float rawcl_etas1 = 3504 [(root_branch)="rawcl_etas1"];
    optional float rawcl_phis1 = 3505 [(root_branch)="rawcl_phis1"];
    optional float rawcl_Es2 = 3506 [(root_branch)="rawcl_Es2"];
    optional float rawcl_etas2 = 3507 [(root_branch)="rawcl_etas2"];
    optional float rawcl_phis2 = 3508 [(root_branch)="rawcl_phis2"];
    optional float rawcl_Es3 = 3509 [(root_branch)="rawcl_Es3"];
    optional float rawcl_etas3 = 3510 [(root_branch)="rawcl_etas3"];
    optional float rawcl_phis3 = 3511 [(root_branch)="rawcl_phis3"];
    optional float rawcl_E = 3512 [(root_branch)="rawcl_E"];
    optional float rawcl_pt = 3513 [(root_branch)="rawcl_pt"];
    optional float rawcl_eta = 3514 [(root_branch)="rawcl_eta"];
    optional float rawcl_phi = 3515 [(root_branch)="rawcl_phi"];
    
    optional int32 truth_isConv = 3600 [(root_branch)="truth_isConv"];
    optional int32 truth_isBrem = 3601 [(root_branch)="truth_isBrem"];
    optional int32 truth_isFromHardProc = 3602 [(root_branch)="truth_isFromHardProc"];
    optional int32 truth_isPhotonFromHardProc = 3603 [(root_branch)="truth_isPhotonFromHardProc"];
    optional float truth_Rconv = 3604 [(root_branch)="truth_Rconv"];
    optional float truth_zconv = 3605 [(root_branch)="truth_zconv"];
    
    optional float deltaEmax2 = 3700 [(root_branch)="deltaEmax2"];
    
    optional float calibHitsShowerDepth = 3800 [(root_branch)="calibHitsShowerDepth"];
    
    optional uint32 isIso = 3900 [(root_branch)="isIso"];
    
    optional float mvaptcone20 = 4000 [(root_branch)="mvaptcone20"];
    optional float mvaptcone30 = 4001 [(root_branch)="mvaptcone30"];
    optional float mvaptcone40 = 4002 [(root_branch)="mvaptcone40"];
    optional float topoEtcone20 = 4003 [(root_branch)="topoEtcone20"];
    optional float topoEtcone40 = 4004 [(root_branch)="topoEtcone40"];
    optional float topoEtcone60 = 4005 [(root_branch)="topoEtcone60"];
    
    optional float jet_dr = 4100 [(root_branch)="jet_dr"];
    optional float jet_E = 4101 [(root_branch)="jet_E"];
    optional float jet_pt = 4102 [(root_branch)="jet_pt"];
    optional float jet_m = 4103 [(root_branch)="jet_m"];
    optional float jet_eta = 4104 [(root_branch)="jet_eta"];
    optional float jet_phi = 4105 [(root_branch)="jet_phi"];
    optional float jet_truth_dr = 4106 [(root_branch)="jet_truth_dr"];
    optional float jet_truth_E = 4107 [(root_branch)="jet_truth_E"];
    optional float jet_truth_pt = 4108 [(root_branch)="jet_truth_pt"];
    optional float jet_truth_m = 4109 [(root_branch)="jet_truth_m"];
    optional float jet_truth_eta = 4110 [(root_branch)="jet_truth_eta"];
    optional float jet_truth_phi = 4111 [(root_branch)="jet_truth_phi"];
    optional int32 jet_truth_matched = 4112 [(root_branch)="jet_truth_matched"];
    optional int32 jet_matched = 4113 [(root_branch)="jet_matched"];
    
    optional float convIP = 4200 [(root_branch)="convIP"];
    optional float convIPRev = 4201 [(root_branch)="convIPRev"];
    
    optional float ptIsolationCone = 4300 [(root_branch)="ptIsolationCone"];
    optional float ptIsolationConePhAngle = 4301 [(root_branch)="ptIsolationConePhAngle"];
    
    optional float Etcone40_ED_corrected = 4400 [(root_branch)="Etcone40_ED_corrected"];
    optional float Etcone40_corrected = 4401 [(root_branch)="Etcone40_corrected"];
    
    optional float ES0_real = 4500 [(root_branch)="ES0_real"];
    optional float ES1_real = 4501 [(root_branch)="ES1_real"];
    optional float ES2_real = 4502 [(root_branch)="ES2_real"];
    optional float ES3_real = 4503 [(root_branch)="ES3_real"];
    
    optional float EcellS0 = 4600 [(root_branch)="EcellS0"];
    optional float etacellS0 = 4601 [(root_branch)="etacellS0"];
    
    optional float HPV_eta = 4700 [(root_branch)="HPV_eta"];
    optional float HPV_sigma_eta = 4701 [(root_branch)="HPV_sigma_eta"];
    optional float HPV_convTrk1_zvertex = 4702 [(root_branch)="HPV_convTrk1_zvertex"];
    optional float HPV_convTrk2_zvertex = 4703 [(root_branch)="HPV_convTrk2_zvertex"];
    optional float HPV_convTrk1_sigma_zvertex = 4704 [(root_branch)="HPV_convTrk1_sigma_zvertex"];
    optional float HPV_convTrk2_sigma_zvertex = 4705 [(root_branch)="HPV_convTrk2_sigma_zvertex"];
    optional float CaloPointing_zvertex = 4706 [(root_branch)="CaloPointing_zvertex"];
    optional float CaloPointing_sigma_zvertex = 4707 [(root_branch)="CaloPointing_sigma_zvertex"];
    optional float CaloPointing_eta = 4708 [(root_branch)="CaloPointing_eta"];
    optional float CaloPointing_sigma_eta = 4709 [(root_branch)="CaloPointing_sigma_eta"];
    optional float HPV_zvertex = 4710 [(root_branch)="HPV_zvertex"];
    optional float HPV_sigma_zvertex = 4711 [(root_branch)="HPV_sigma_zvertex"];
    optional float HPV_zvertex_neutral = 4712 [(root_branch)="HPV_zvertex_neutral"];
    optional float HPV_zvertex_charged = 4713 [(root_branch)="HPV_zvertex_charged"];
    optional float HPV_sigma_zvertex_neutral = 4714 [(root_branch)="HPV_sigma_zvertex_neutral"];
    optional float HPV_sigma_zvertex_charged = 4715 [(root_branch)="HPV_sigma_zvertex_charged"];
    
    optional float ambiguityResult = 4800 [(root_branch)="ambiguityResult"];
    
    optional float itune1 = 4900 [(root_branch)="itune1"];
    optional float itune2 = 4901 [(root_branch)="itune2"];
    optional float itune3 = 4902 [(root_branch)="itune3"];
    
    optional float trackIsol = 5000 [(root_branch)="trackIsol"];
    
    optional float PtIsolationCone_woIC = 5100 [(root_branch)="PtIsolationCone_woIC"];
    optional float PtIsolationConePhAngle_woIC = 5101 [(root_branch)="PtIsolationConePhAngle_woIC"];
    optional float trackIsol_woIC = 5102 [(root_branch)="trackIsol_woIC"];
    
    optional int32 selected = 5200 [(root_branch)="selected"];
    
    optional float parton_pt_max_MC = 5300 [(root_branch)="parton_pt_max_MC"];
    optional float parton_eta_MC = 5301 [(root_branch)="parton_eta_MC"];
    optional float parton_phi_MC = 5302 [(root_branch)="parton_phi_MC"];
    optional float parton_barcode_MC = 5303 [(root_branch)="parton_barcode_MC"];
    optional float parton_pdg_MC = 5304 [(root_branch)="parton_pdg_MC"];
    optional float etaS2_MC = 5305 [(root_branch)="etaS2_MC"];
    optional float phiS2_MC = 5306 [(root_branch)="phiS2_MC"];
    optional float XConv_MC = 5307 [(root_branch)="XConv_MC"];
    optional float YConv_MC = 5308 [(root_branch)="YConv_MC"];
    
    optional int32 isG4part = 5400 [(root_branch)="isG4part"];
    
    optional float partonIsolation15_UE_MC = 5500 [(root_branch)="partonIsolation15_UE_MC"];
    optional float partonIsolation20_UE_MC = 5501 [(root_branch)="partonIsolation20_UE_MC"];
    optional float partonIsolation25_UE_MC = 5502 [(root_branch)="partonIsolation25_UE_MC"];
    optional float partonIsolation30_UE_MC = 5503 [(root_branch)="partonIsolation30_UE_MC"];
    optional float partonIsolation35_UE_MC = 5504 [(root_branch)="partonIsolation35_UE_MC"];
    optional float partonIsolation40_UE_MC = 5505 [(root_branch)="partonIsolation40_UE_MC"];
    optional float partonIsolation45_UE_MC = 5506 [(root_branch)="partonIsolation45_UE_MC"];
    optional float partonIsolation60_UE_MC = 5507 [(root_branch)="partonIsolation60_UE_MC"];
    optional float partonIsolation15_MC = 5508 [(root_branch)="partonIsolation15_MC"];
    optional float partonIsolation20_MC = 5509 [(root_branch)="partonIsolation20_MC"];
    optional float partonIsolation25_MC = 5510 [(root_branch)="partonIsolation25_MC"];
    optional float partonIsolation30_MC = 5511 [(root_branch)="partonIsolation30_MC"];
    optional float partonIsolation35_MC = 5512 [(root_branch)="partonIsolation35_MC"];
    optional float partonIsolation40_MC = 5513 [(root_branch)="partonIsolation40_MC"];
    optional float partonIsolation45_MC = 5514 [(root_branch)="partonIsolation45_MC"];
    optional float partonIsolation60_MC = 5515 [(root_branch)="partonIsolation60_MC"];
    optional float particleIsolation40_MC = 5516 [(root_branch)="particleIsolation40_MC"];
    optional float particleIsolation40_ED_corrected_MC = 5517 [(root_branch)="particleIsolation40_ED_corrected_MC"];
    optional float particleIsolation40_ED_corrected_reco_MC = 5518 [(root_branch)="particleIsolation40_ED_corrected_reco_MC"];
    
    optional uint32 isGoodOQbits = 5600 [(root_branch)="isGoodOQbits"];
    optional int32 isGoodOQphoton = 5601 [(root_branch)="isGoodOQphoton"];
    optional int32 isGoodOQelectron = 5602 [(root_branch)="isGoodOQelectron"];
    
    optional float convTrk1_chi2 = 5700 [(root_branch)="convTrk1_chi2"];
    optional float convTrk2_chi2 = 5701 [(root_branch)="convTrk2_chi2"];
    optional float convTrk1_expectHitInBLayer = 5702 [(root_branch)="convTrk1_expectHitInBLayer"];
    optional float convTrk1_numTRTOutliers = 5703 [(root_branch)="convTrk1_numTRTOutliers"];
    optional float convTrk1_numTRTHTHits = 5704 [(root_branch)="convTrk1_numTRTHTHits"];
    optional float convTrk1_numTRTHTOutliers = 5705 [(root_branch)="convTrk1_numTRTHTOutliers"];
    optional float convTrk2_expectHitInBLayer = 5706 [(root_branch)="convTrk2_expectHitInBLayer"];
    optional float convTrk2_numTRTOutliers = 5707 [(root_branch)="convTrk2_numTRTOutliers"];
    optional float convTrk2_numTRTHTHits = 5708 [(root_branch)="convTrk2_numTRTHTHits"];
    optional float convTrk2_numTRTHTOutliers = 5709 [(root_branch)="convTrk2_numTRTHTOutliers"];
    optional float convTrk1_trtPID = 5710 [(root_branch)="convTrk1_trtPID"];
    optional float convTrk2_trtPID = 5711 [(root_branch)="convTrk2_trtPID"];
    optional float convTrk1_trtPIDHT = 5712 [(root_branch)="convTrk1_trtPIDHT"];
    optional float convTrk2_trtPIDHT = 5713 [(root_branch)="convTrk2_trtPIDHT"];
    optional float convTrk1_trtPIDToT = 5714 [(root_branch)="convTrk1_trtPIDToT"];
    optional float convTrk2_trtPIDToT = 5715 [(root_branch)="convTrk2_trtPIDToT"];
    optional float convTrk1_ToTvar = 5716 [(root_branch)="convTrk1_ToTvar"];
    optional float convTrk2_ToTvar = 5717 [(root_branch)="convTrk2_ToTvar"];
    optional float convTrk1_trtRatioHT = 5718 [(root_branch)="convTrk1_trtRatioHT"];
    optional float convTrk2_trtRatioHT = 5719 [(root_branch)="convTrk2_trtRatioHT"];
    optional float convTrk1_charge = 5720 [(root_branch)="convTrk1_charge"];
    optional float convTrk2_charge = 5721 [(root_branch)="convTrk2_charge"];
    optional float convTrk1_DeltaEta_track_calo = 5722 [(root_branch)="convTrk1_DeltaEta_track_calo"];
    optional float convTrk2_DeltaEta_track_calo = 5723 [(root_branch)="convTrk2_DeltaEta_track_calo"];
    optional float convTrk1_DeltaPhi_track_calo = 5724 [(root_branch)="convTrk1_DeltaPhi_track_calo"];
    optional float convTrk2_DeltaPhi_track_calo = 5725 [(root_branch)="convTrk2_DeltaPhi_track_calo"];
    
    optional float XConv = 5800 [(root_branch)="XConv"];
    optional float YConv = 5801 [(root_branch)="YConv"];
    optional float conv_chi2 = 5802 [(root_branch)="conv_chi2"];
    optional float conv_dcottheta = 5803 [(root_branch)="conv_dcottheta"];
    optional float conv_dphi = 5804 [(root_branch)="conv_dphi"];
    optional float conv_dist = 5805 [(root_branch)="conv_dist"];
    optional float conv_DR1R2 = 5806 [(root_branch)="conv_DR1R2"];
    optional float conv_p = 5807 [(root_branch)="conv_p"];
    optional float conv_phi = 5808 [(root_branch)="conv_phi"];
    optional float conv_theta = 5809 [(root_branch)="conv_theta"];
    optional float conv_perr = 5810 [(root_branch)="conv_perr"];
    optional float conv_phierr = 5811 [(root_branch)="conv_phierr"];
    optional float conv_thetaerr = 5812 [(root_branch)="conv_thetaerr"];
    optional float conv_GSF_p = 5813 [(root_branch)="conv_GSF_p"];
    optional float conv_GSF_phi = 5814 [(root_branch)="conv_GSF_phi"];
    optional float conv_GSF_theta = 5815 [(root_branch)="conv_GSF_theta"];
    optional float conv_GSF_perr = 5816 [(root_branch)="conv_GSF_perr"];
    optional float conv_GSF_phierr = 5817 [(root_branch)="conv_GSF_phierr"];
    optional float conv_GSF_thetaerr = 5818 [(root_branch)="conv_GSF_thetaerr"];
    optional float conv_DNA_p = 5819 [(root_branch)="conv_DNA_p"];
    optional float conv_DNA_phi = 5820 [(root_branch)="conv_DNA_phi"];
    optional float conv_DNA_theta = 5821 [(root_branch)="conv_DNA_theta"];
    optional float conv_DNA_perr = 5822 [(root_branch)="conv_DNA_perr"];
    optional float conv_DNA_phierr = 5823 [(root_branch)="conv_DNA_phierr"];
    optional float conv_DNA_thetaerr = 5824 [(root_branch)="conv_DNA_thetaerr"];
    optional float Etcone10_ED_corrected = 5825 [(root_branch)="Etcone10_ED_corrected"];
    optional float Etcone15_ED_corrected = 5826 [(root_branch)="Etcone15_ED_corrected"];
    optional float Etcone20_ED_corrected = 5827 [(root_branch)="Etcone20_ED_corrected"];
    optional float Etcone25_ED_corrected = 5828 [(root_branch)="Etcone25_ED_corrected"];
    optional float Etcone30_ED_corrected = 5829 [(root_branch)="Etcone30_ED_corrected"];
    optional float Etcone35_ED_corrected = 5830 [(root_branch)="Etcone35_ED_corrected"];
    optional float Etcone10_corrected = 5831 [(root_branch)="Etcone10_corrected"];
    optional float Etcone15_corrected = 5832 [(root_branch)="Etcone15_corrected"];
    optional float Etcone20_corrected = 5833 [(root_branch)="Etcone20_corrected"];
    optional float Etcone25_corrected = 5834 [(root_branch)="Etcone25_corrected"];
    optional float Etcone30_corrected = 5835 [(root_branch)="Etcone30_corrected"];
    optional float Etcone35_corrected = 5836 [(root_branch)="Etcone35_corrected"];
    optional float Etcone10_ED_corrected_new = 5837 [(root_branch)="Etcone10_ED_corrected_new"];
    optional float Etcone15_ED_corrected_new = 5838 [(root_branch)="Etcone15_ED_corrected_new"];
    optional float Etcone20_ED_corrected_new = 5839 [(root_branch)="Etcone20_ED_corrected_new"];
    optional float Etcone25_ED_corrected_new = 5840 [(root_branch)="Etcone25_ED_corrected_new"];
    optional float Etcone30_ED_corrected_new = 5841 [(root_branch)="Etcone30_ED_corrected_new"];
    optional float Etcone35_ED_corrected_new = 5842 [(root_branch)="Etcone35_ED_corrected_new"];
    optional float Etcone40_ED_corrected_new = 5843 [(root_branch)="Etcone40_ED_corrected_new"];
    optional float Etcone10_corrected_new = 5844 [(root_branch)="Etcone10_corrected_new"];
    optional float Etcone15_corrected_new = 5845 [(root_branch)="Etcone15_corrected_new"];
    optional float Etcone20_corrected_new = 5846 [(root_branch)="Etcone20_corrected_new"];
    optional float Etcone25_corrected_new = 5847 [(root_branch)="Etcone25_corrected_new"];
    optional float Etcone30_corrected_new = 5848 [(root_branch)="Etcone30_corrected_new"];
    optional float Etcone35_corrected_new = 5849 [(root_branch)="Etcone35_corrected_new"];
    optional float Etcone40_corrected_new = 5850 [(root_branch)="Etcone40_corrected_new"];
    
    optional float cells35_Etcone20 = 5900 [(root_branch)="cells35_Etcone20"];
    optional float cells35_Etcone30 = 5901 [(root_branch)="cells35_Etcone30"];
    optional float cells35_Etcone40 = 5902 [(root_branch)="cells35_Etcone40"];
    optional float cells55_Etcone20 = 5903 [(root_branch)="cells55_Etcone20"];
    optional float cells55_Etcone30 = 5904 [(root_branch)="cells55_Etcone30"];
    optional float cells55_Etcone40 = 5905 [(root_branch)="cells55_Etcone40"];
    optional float Etcone20Iso = 5906 [(root_branch)="Etcone20Iso"];
    optional float Etcone30Iso = 5907 [(root_branch)="Etcone30Iso"];
    optional float Etcone40Iso = 5908 [(root_branch)="Etcone40Iso"];
    optional float cells35_Etcone20Iso = 5909 [(root_branch)="cells35_Etcone20Iso"];
    optional float cells35_Etcone30Iso = 5910 [(root_branch)="cells35_Etcone30Iso"];
    optional float cells35_Etcone40Iso = 5911 [(root_branch)="cells35_Etcone40Iso"];
    optional float cells55_Etcone20Iso = 5912 [(root_branch)="cells55_Etcone20Iso"];
    optional float cells55_Etcone30Iso = 5913 [(root_branch)="cells55_Etcone30Iso"];
    optional float cells55_Etcone40Iso = 5914 [(root_branch)="cells55_Etcone40Iso"];
    
    optional float ED_median = 6000 [(root_branch)="ED_median"];
    optional float ED_sigma = 6001 [(root_branch)="ED_sigma"];
    optional int32 ED_Njets = 6002 [(root_branch)="ED_Njets"];
    optional float ED_median_new = 6003 [(root_branch)="ED_median_new"];
    optional float ED_sigma_new = 6004 [(root_branch)="ED_sigma_new"];
    optional int32 ED_Njets_new = 6005 [(root_branch)="ED_Njets_new"];
    
    optional float transmin_etcone40 = 6100 [(root_branch)="transmin_etcone40"];
    optional float transmax_etcone40 = 6101 [(root_branch)="transmax_etcone40"];
    optional float transmin_etcone100 = 6102 [(root_branch)="transmin_etcone100"];
    optional float transmax_etcone100 = 6103 [(root_branch)="transmax_etcone100"];
    optional float transmin = 6104 [(root_branch)="transmin"];
    optional float transmax = 6105 [(root_branch)="transmax"];
    optional float transmin_loweta = 6106 [(root_branch)="transmin_loweta"];
    optional float transmax_loweta = 6107 [(root_branch)="transmax_loweta"];
    
    optional float topodr = 6200 [(root_branch)="topodr"];
    optional float topopt = 6201 [(root_branch)="topopt"];
    optional float topoeta = 6202 [(root_branch)="topoeta"];
    optional float topophi = 6203 [(root_branch)="topophi"];
    optional int32 topomatched = 6204 [(root_branch)="topomatched"];
    optional float topoEMdr = 6205 [(root_branch)="topoEMdr"];
    optional float topoEMpt = 6206 [(root_branch)="topoEMpt"];
    optional float topoEMeta = 6207 [(root_branch)="topoEMeta"];
    optional float topoEMphi = 6208 [(root_branch)="topoEMphi"];
    optional int32 topoEMmatched = 6209 [(root_branch)="topoEMmatched"];
    
    optional float EF_dr = 6300 [(root_branch)="EF_dr"];
    optional int32 EF_index = 6301 [(root_branch)="EF_index"];
    optional float L2_dr = 6302 [(root_branch)="L2_dr"];
    optional int32 L2_index = 6303 [(root_branch)="L2_index"];
    optional float L1_dr = 6304 [(root_branch)="L1_dr"];
    optional int32 L1_index = 6305 [(root_branch)="L1_index"];
    optional float jet_AntiKt4TopoEMJets_dr = 6306 [(root_branch)="jet_AntiKt4TopoEMJets_dr"];
    optional int32 jet_AntiKt4TopoEMJets_index = 6307 [(root_branch)="jet_AntiKt4TopoEMJets_index"];
    optional int32 jet_AntiKt4TopoEMJets_matched = 6308 [(root_branch)="jet_AntiKt4TopoEMJets_matched"];
    optional float jet_AntiKt6TopoEMJets_dr = 6309 [(root_branch)="jet_AntiKt6TopoEMJets_dr"];
    optional int32 jet_AntiKt6TopoEMJets_index = 6310 [(root_branch)="jet_AntiKt6TopoEMJets_index"];
    optional int32 jet_AntiKt6TopoEMJets_matched = 6311 [(root_branch)="jet_AntiKt6TopoEMJets_matched"];
    optional int32 el_index = 6312 [(root_branch)="el_index"];
    
    optional float etconoisedR04Sig2 = 6400 [(root_branch)="etconoisedR04Sig2"];
    optional float etconoisedR04Sig3 = 6401 [(root_branch)="etconoisedR04Sig3"];
    
    optional int32 convTrk_n = 6500 [(root_branch)="convTrk_n"];
    repeated int32 convTrk_index = 6501 [(root_branch)="convTrk_index"];
    repeated int32 convTrk_trackfitter = 6502 [(root_branch)="convTrk_trackfitter"];
    repeated int32 convTrk_trackpatternReco1 = 6503 [(root_branch)="convTrk_trackpatternReco1"];
    repeated int32 convTrk_trackpatternReco2 = 6504 [(root_branch)="convTrk_trackpatternReco2"];
    repeated int32 convTrk_trackseedFinder = 6505 [(root_branch)="convTrk_trackseedFinder"];
}