import "a4/root/RootExtension.proto";

message EFElectron {
    
    optional float E = 1 [(root_branch)="E"]; 
    optional float Et = 2 [(root_branch)="Et"]; 
    optional float pt = 3 [(root_branch)="pt"]; 
    optional float m = 4 [(root_branch)="m"]; 
    optional float eta = 5 [(root_branch)="eta"]; 
    optional float phi = 6 [(root_branch)="phi"]; 
    optional float px = 7 [(root_branch)="px"]; 
    optional float py = 8 [(root_branch)="py"]; 
    optional float pz = 9 [(root_branch)="pz"]; 
    
    optional float charge = 100 [(root_branch)="charge"]; 
    
    optional int32 author = 200 [(root_branch)="author"]; 
    
    optional uint32 isEM = 300 [(root_branch)="isEM"]; 
    
    optional int32 loose = 400 [(root_branch)="loose"]; 
    optional int32 medium = 401 [(root_branch)="medium"]; 
    optional int32 mediumIso = 402 [(root_branch)="mediumIso"]; 
    optional int32 tight = 403 [(root_branch)="tight"]; 
    optional int32 tightIso = 404 [(root_branch)="tightIso"]; 
    
    optional float Ethad = 500 [(root_branch)="Ethad"]; 
    optional float Ethad1 = 501 [(root_branch)="Ethad1"]; 
    optional float f1 = 502 [(root_branch)="f1"]; 
    optional float f1core = 503 [(root_branch)="f1core"]; 
    optional float Emins1 = 504 [(root_branch)="Emins1"]; 
    optional float fside = 505 [(root_branch)="fside"]; 
    optional float Emax2 = 506 [(root_branch)="Emax2"]; 
    optional float ws3 = 507 [(root_branch)="ws3"]; 
    optional float wstot = 508 [(root_branch)="wstot"]; 
    optional float emaxs1 = 509 [(root_branch)="emaxs1"]; 
    optional float deltaEs = 510 [(root_branch)="deltaEs"]; 
    optional float E233 = 511 [(root_branch)="E233"]; 
    optional float E237 = 512 [(root_branch)="E237"]; 
    optional float E277 = 513 [(root_branch)="E277"]; 
    optional float weta2 = 514 [(root_branch)="weta2"]; 
    optional float f3 = 515 [(root_branch)="f3"]; 
    optional float f3core = 516 [(root_branch)="f3core"]; 
    
    optional float rphiallcalo = 600 [(root_branch)="rphiallcalo"]; 
    
    optional float Etcone45 = 700 [(root_branch)="Etcone45"]; 
    optional float Etcone20 = 701 [(root_branch)="Etcone20"]; 
    optional float Etcone30 = 702 [(root_branch)="Etcone30"]; 
    optional float Etcone40 = 703 [(root_branch)="Etcone40"]; 
    
    optional float pos7 = 800 [(root_branch)="pos7"]; 
    
    optional float etacorrmag = 900 [(root_branch)="etacorrmag"]; 
    
    optional float deltaeta1 = 1000 [(root_branch)="deltaeta1"]; 
    optional float deltaeta2 = 1001 [(root_branch)="deltaeta2"]; 
    optional float deltaphi2 = 1002 [(root_branch)="deltaphi2"]; 
    
    optional float expectHitInBLayer = 1100 [(root_branch)="expectHitInBLayer"]; 
    
    optional float trackd0_physics = 1200 [(root_branch)="trackd0_physics"]; 
    
    optional float reta = 1300 [(root_branch)="reta"]; 
    optional float rphi = 1301 [(root_branch)="rphi"]; 
    
    optional float cl_E = 1400 [(root_branch)="cl_E"]; 
    optional float cl_pt = 1401 [(root_branch)="cl_pt"]; 
    optional float cl_eta = 1402 [(root_branch)="cl_eta"]; 
    optional float cl_phi = 1403 [(root_branch)="cl_phi"]; 
    optional float cl_etas2 = 1404 [(root_branch)="cl_etas2"]; 
    
    optional int32 EF_2e10_medium = 1500 [(root_branch)="EF_2e10_medium"]; 
    optional int32 EF_2e10_medium_mu6 = 1501 [(root_branch)="EF_2e10_medium_mu6"]; 
    optional int32 EF_2e12_medium = 1502 [(root_branch)="EF_2e12_medium"]; 
    optional int32 EF_2e15_loose = 1503 [(root_branch)="EF_2e15_loose"]; 
    optional int32 EF_2e5_medium = 1504 [(root_branch)="EF_2e5_medium"]; 
    optional int32 EF_2e5_medium_SiTrk = 1505 [(root_branch)="EF_2e5_medium_SiTrk"]; 
    optional int32 EF_2e5_medium_TRT = 1506 [(root_branch)="EF_2e5_medium_TRT"]; 
    optional int32 EF_2e5_tight = 1507 [(root_branch)="EF_2e5_tight"]; 
    optional int32 EF_2e5_tight_Jpsi = 1508 [(root_branch)="EF_2e5_tight_Jpsi"]; 
    optional int32 EF_e10_NoCut = 1509 [(root_branch)="EF_e10_NoCut"]; 
    optional int32 EF_e10_loose = 1510 [(root_branch)="EF_e10_loose"]; 
    optional int32 EF_e10_loose_mu10 = 1511 [(root_branch)="EF_e10_loose_mu10"]; 
    optional int32 EF_e10_loose_mu6 = 1512 [(root_branch)="EF_e10_loose_mu6"]; 
    optional int32 EF_e10_medium = 1513 [(root_branch)="EF_e10_medium"]; 
    optional int32 EF_e10_medium_2mu6 = 1514 [(root_branch)="EF_e10_medium_2mu6"]; 
    optional int32 EF_e10_medium_mu10 = 1515 [(root_branch)="EF_e10_medium_mu10"]; 
    optional int32 EF_e10_medium_mu6 = 1516 [(root_branch)="EF_e10_medium_mu6"]; 
    optional int32 EF_e15_HLTtighter = 1517 [(root_branch)="EF_e15_HLTtighter"]; 
    optional int32 EF_e15_loose = 1518 [(root_branch)="EF_e15_loose"]; 
    optional int32 EF_e15_medium = 1519 [(root_branch)="EF_e15_medium"]; 
    optional int32 EF_e15_medium_mu6 = 1520 [(root_branch)="EF_e15_medium_mu6"]; 
    optional int32 EF_e15_medium_xe30_noMu = 1521 [(root_branch)="EF_e15_medium_xe30_noMu"]; 
    optional int32 EF_e15_medium_xe35_noMu = 1522 [(root_branch)="EF_e15_medium_xe35_noMu"]; 
    optional int32 EF_e15_medium_xe40_noMu_loose = 1523 [(root_branch)="EF_e15_medium_xe40_noMu_loose"]; 
    
    optional int32 EF_e15_tight = 1600 [(root_branch)="EF_e15_tight"]; 
    optional int32 EF_e15_tight1 = 1601 [(root_branch)="EF_e15_tight1"]; 
    optional int32 EF_e15_tight_xe30_noMu = 1602 [(root_branch)="EF_e15_tight_xe30_noMu"]; 
    optional int32 EF_e18_medium = 1603 [(root_branch)="EF_e18_medium"]; 
    optional int32 EF_e18_tight = 1604 [(root_branch)="EF_e18_tight"]; 
    optional int32 EF_e20_loose = 1605 [(root_branch)="EF_e20_loose"]; 
    optional int32 EF_e20_loose_IDTrkNoCut = 1606 [(root_branch)="EF_e20_loose_IDTrkNoCut"]; 
    optional int32 EF_e20_loose_TRT = 1607 [(root_branch)="EF_e20_loose_TRT"]; 
    optional int32 EF_e20_loose_xe20 = 1608 [(root_branch)="EF_e20_loose_xe20"]; 
    optional int32 EF_e20_loose_xe20_noMu = 1609 [(root_branch)="EF_e20_loose_xe20_noMu"]; 
    optional int32 EF_e20_loose_xe30 = 1610 [(root_branch)="EF_e20_loose_xe30"]; 
    optional int32 EF_e20_loose_xe30_noMu = 1611 [(root_branch)="EF_e20_loose_xe30_noMu"]; 
    optional int32 EF_e20_medium = 1612 [(root_branch)="EF_e20_medium"]; 
    optional int32 EF_e20_medium1 = 1613 [(root_branch)="EF_e20_medium1"]; 
    optional int32 EF_e20_medium_IDTrkNoCut = 1614 [(root_branch)="EF_e20_medium_IDTrkNoCut"]; 
    optional int32 EF_e20_medium_SiTrk = 1615 [(root_branch)="EF_e20_medium_SiTrk"]; 
    optional int32 EF_e20_medium_TRT = 1616 [(root_branch)="EF_e20_medium_TRT"]; 
    optional int32 EF_e20_tight = 1617 [(root_branch)="EF_e20_tight"]; 
    optional int32 EF_e22_medium = 1618 [(root_branch)="EF_e22_medium"]; 
    optional int32 EF_e25_loose = 1619 [(root_branch)="EF_e25_loose"]; 
    optional int32 EF_e25_medium = 1620 [(root_branch)="EF_e25_medium"]; 
    optional int32 EF_e30_loose = 1621 [(root_branch)="EF_e30_loose"]; 
    optional int32 EF_e5_NoCut_L2SW = 1622 [(root_branch)="EF_e5_NoCut_L2SW"]; 
    optional int32 EF_e5_NoCut_Ringer = 1623 [(root_branch)="EF_e5_NoCut_Ringer"]; 
    optional int32 EF_e5_NoCut_firstempty = 1624 [(root_branch)="EF_e5_NoCut_firstempty"]; 
    optional int32 EF_e5_medium_mu4 = 1625 [(root_branch)="EF_e5_medium_mu4"]; 
    optional int32 EF_e5_medium_mu4_topoAngle_medium = 1626 [(root_branch)="EF_e5_medium_mu4_topoAngle_medium"]; 
    optional int32 EF_e5_medium_mu4_topoAngle_tight = 1627 [(root_branch)="EF_e5_medium_mu4_topoAngle_tight"]; 
    optional int32 EF_e5_tight = 1628 [(root_branch)="EF_e5_tight"]; 
    optional int32 EF_e5_tight_TRT = 1629 [(root_branch)="EF_e5_tight_TRT"]; 
    optional int32 EF_e5_tight_e4_etcut_Jpsi = 1630 [(root_branch)="EF_e5_tight_e4_etcut_Jpsi"]; 
    optional int32 EF_e5_tight_e4_etcut_Jpsi_SiTrk = 1631 [(root_branch)="EF_e5_tight_e4_etcut_Jpsi_SiTrk"]; 
    optional int32 EF_e5_tight_e4_etcut_Jpsi_TRT = 1632 [(root_branch)="EF_e5_tight_e4_etcut_Jpsi_TRT"]; 
    optional int32 EF_e5_tight_e5_NoCut = 1633 [(root_branch)="EF_e5_tight_e5_NoCut"]; 
    optional int32 EF_e5_tight_e5_NoCut_Jpsi = 1634 [(root_branch)="EF_e5_tight_e5_NoCut_Jpsi"]; 
    optional int32 EF_e5_tight_e7_etcut_Jpsi = 1635 [(root_branch)="EF_e5_tight_e7_etcut_Jpsi"]; 
    optional int32 EF_e5_tight_e9_etcut_Jpsi = 1636 [(root_branch)="EF_e5_tight_e9_etcut_Jpsi"]; 
    optional int32 EF_e5_tight_mu4_topoAngle_medium = 1637 [(root_branch)="EF_e5_tight_mu4_topoAngle_medium"]; 
    optional int32 EF_e5_tight_mu4_topoAngle_tight = 1638 [(root_branch)="EF_e5_tight_mu4_topoAngle_tight"]; 
    
    optional int32 EF_e60_loose = 1700 [(root_branch)="EF_e60_loose"]; 
    
    optional int32 EF_e9_tight_e5_tight_Jpsi = 1800 [(root_branch)="EF_e9_tight_e5_tight_Jpsi"]; 
    optional int32 EF_eb_physics = 1801 [(root_branch)="EF_eb_physics"]; 
    optional int32 EF_eb_physics_empty = 1802 [(root_branch)="EF_eb_physics_empty"]; 
    optional int32 EF_eb_physics_firstempty = 1803 [(root_branch)="EF_eb_physics_firstempty"]; 
    optional int32 EF_eb_physics_noL1PS = 1804 [(root_branch)="EF_eb_physics_noL1PS"]; 
    optional int32 EF_eb_physics_unpaired_iso = 1805 [(root_branch)="EF_eb_physics_unpaired_iso"]; 
    optional int32 EF_eb_physics_unpaired_noniso = 1806 [(root_branch)="EF_eb_physics_unpaired_noniso"]; 
    optional int32 EF_eb_random = 1807 [(root_branch)="EF_eb_random"]; 
    optional int32 EF_eb_random_empty = 1808 [(root_branch)="EF_eb_random_empty"]; 
    optional int32 EF_eb_random_firstempty = 1809 [(root_branch)="EF_eb_random_firstempty"]; 
    optional int32 EF_eb_random_unpaired_iso = 1810 [(root_branch)="EF_eb_random_unpaired_iso"]; 
    
    optional int32 EF_em105_passHLT = 1900 [(root_branch)="EF_em105_passHLT"]; 
    
    optional float trackd0 = 2000 [(root_branch)="trackd0"]; 
    optional float trackz0 = 2001 [(root_branch)="trackz0"]; 
    optional float trackphi = 2002 [(root_branch)="trackphi"]; 
    optional float tracktheta = 2003 [(root_branch)="tracktheta"]; 
    optional float trackqoverp = 2004 [(root_branch)="trackqoverp"]; 
    optional float trackpt = 2005 [(root_branch)="trackpt"]; 
    optional float tracketa = 2006 [(root_branch)="tracketa"]; 
    
    optional int32 nBLHits = 2100 [(root_branch)="nBLHits"]; 
    optional int32 nPixHits = 2101 [(root_branch)="nPixHits"]; 
    optional int32 nSCTHits = 2102 [(root_branch)="nSCTHits"]; 
    optional int32 nTRTHits = 2103 [(root_branch)="nTRTHits"]; 
    optional int32 nTRTHighTHits = 2104 [(root_branch)="nTRTHighTHits"]; 
    
    optional int32 nPixHoles = 2200 [(root_branch)="nPixHoles"]; 
    optional int32 nSCTHoles = 2201 [(root_branch)="nSCTHoles"]; 
    optional int32 nTRTHoles = 2202 [(root_branch)="nTRTHoles"]; 
    
    optional int32 nBLSharedHits = 2300 [(root_branch)="nBLSharedHits"]; 
    optional int32 nPixSharedHits = 2301 [(root_branch)="nPixSharedHits"]; 
    optional int32 nSCTSharedHits = 2302 [(root_branch)="nSCTSharedHits"]; 
    
    optional int32 nBLayerOutliers = 2400 [(root_branch)="nBLayerOutliers"]; 
    optional int32 nPixelOutliers = 2401 [(root_branch)="nPixelOutliers"]; 
    optional int32 nSCTOutliers = 2402 [(root_branch)="nSCTOutliers"]; 
    optional int32 nTRTOutliers = 2403 [(root_branch)="nTRTOutliers"]; 
    optional int32 nTRTHighTOutliers = 2404 [(root_branch)="nTRTHighTOutliers"]; 
    
    optional int32 expectBLayerHit = 2500 [(root_branch)="expectBLayerHit"]; 
    
    optional int32 nSiHits = 2600 [(root_branch)="nSiHits"]; 
    optional float TRTHighTHitsRatio = 2601 [(root_branch)="TRTHighTHitsRatio"]; 
    optional float TRTHighTOutliersRatio = 2602 [(root_branch)="TRTHighTOutliersRatio"]; 
    
    optional float pixeldEdx = 2700 [(root_branch)="pixeldEdx"]; 
    optional int32 nGoodHitsPixeldEdx = 2701 [(root_branch)="nGoodHitsPixeldEdx"]; 
    optional float massPixeldEdx = 2702 [(root_branch)="massPixeldEdx"]; 
    repeated float likelihoodsPixeldEdx = 2703 [(root_branch)="likelihoodsPixeldEdx"]; 
    
    optional float eProbabilityComb = 2800 [(root_branch)="eProbabilityComb"]; 
    optional float eProbabilityHT = 2801 [(root_branch)="eProbabilityHT"]; 
    optional float eProbabilityToT = 2802 [(root_branch)="eProbabilityToT"]; 
    optional float eProbabilityBrem = 2803 [(root_branch)="eProbabilityBrem"]; 
    
    optional float vertweight = 2900 [(root_branch)="vertweight"]; 
    
    optional int32 hastrack = 3000 [(root_branch)="hastrack"]; 
    
    
}