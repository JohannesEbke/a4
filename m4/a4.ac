AC_CONFIG_MACRO_DIR([m4])

# specify language
AC_PROG_CC_C_O
AC_PROG_CXX([g++46 g++4.6 g++-4.6 g++45 g++4.5 g++-4.5 g++44 g++4.4 g++-4.4 g++ gcc cl KCC CC cxx cc++ xlC aCC c++])
AC_LANG([C++])
AC_LANG_CXX_0X
AC_NAMESPACE_SHARED_PTR
AM_PATH_PYTHON([2.6])
m4_ifdef([LT_INIT], [LT_INIT], [AC_PROG_LIBTOOL])
AC_CHECK_HEADERS([cstdint tr1/cstdint stdint.h])
AC_CHECK_HEADERS([cstring tr1/cstring string.h])
AC_CHECK_HEADERS([memory tr1/memory])
A4_SILENT

# Check for dependencies
A4_PROTOBUF_CHECK([:],[AC_MSG_ERROR([A4 requires the google protobuf library, which configure could not find! Run ./get_protobuf.sh in your a4 directory to setup a 'builtin' copy and rerun configure.])])

A4_SNAPPY_CHECK([:],[AC_MSG_ERROR([A4 requires the google snappy library, which configure could not find! Run $srcdir/get_snappy.sh to setup a 'builtin' copy and rerun configure.])])

A4_BOOST_CHECK([:],[AC_MSG_ERROR([A4 requires the C++ boost library version >= 1.43, which configure could not find! Run ./get_miniboost.sh" in your a4 directory to setup a 'builtin' copy of the required part of boost and rerun configure.])])

A4_CERN_ROOT_SYSTEM_CHECK([:],[AC_MSG_ERROR([a4root requires the CERN ROOT library. http://root.cern.ch/])])

A4_GTEST_CHECK

# Enable this_a4.sh
AC_CONFIG_FILES([m4/this_a4.sh.in:m4/this_a4.sh.ac])

if test x${PACKAGE_NAME} != xa4; then
    AC_SUBST([A4_THIS_SCRIPT],[this_a4.sh])
    AC_SUBST([A4_THIS_SCRIPT_IN],[m4/this_a4.sh.in])
    AC_SUBST([A4_GTEST_SUBDIR],[gtest])
fi

A4_INIT
